BEGIN;
BEGIN
EXPLAIN
select
	s_name,
	s_address
from
	supplier,
	nation
where
	s_suppkey in (
		select
			distinct (ps_suppkey)
		from
			partsupp,
			part
		where
			ps_partkey=p_partkey
			and p_name like 'tan%'
			and ps_availqty > (
				select
					0.5 * sum(l_quantity)
				from
					lineitem
				where
					l_partkey = ps_partkey
					and l_suppkey = ps_suppkey
					and l_shipdate >= '1995-01-01'
					and l_shipdate < cast(date '1995-01-01' + interval '1 year' as date)
			)
	)
	and s_nationkey = n_nationkey
	and n_name = 'KENYA'
order by
	s_name;
                                                                               QUERY PLAN                                                                               
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=1128226433.74..1128226436.68 rows=1175 width=51)
   Sort Key: supplier.s_name
   ->  Hash Semi Join  (cost=1128222745.32..1128226373.83 rows=1175 width=51)
         Hash Cond: (supplier.s_suppkey = partsupp.ps_suppkey)
         ->  Hash Join  (cost=1.32..3595.32 rows=4000 width=55)
               Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
               ->  Seq Scan on supplier  (cost=0.00..3179.00 rows=100000 width=59)
               ->  Hash  (cost=1.31..1.31 rows=1 width=4)
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4)
                           Filter: (n_name = 'KENYA'::bpchar)
         ->  Hash  (cost=1128222376.96..1128222376.96 rows=29363 width=4)
               ->  HashAggregate  (cost=1128221789.70..1128222083.33 rows=29363 width=4)
                     ->  Merge Join  (cost=7614.88..1128221716.29 rows=29363 width=4)
                           Merge Cond: (part.p_partkey = partsupp.ps_partkey)
                           ->  Index Scan using pk_part on part  (cost=0.00..97473.47 rows=22022 width=4)
                                 Filter: ((p_name)::text ~~ 'tan%'::text)
                           ->  Index Scan using pk_partsupp on partsupp  (cost=0.00..1128123573.20 rows=2666667 width=8)
                                 Filter: ((ps_availqty)::double precision > (SubPlan 1))
                                 SubPlan 1
                                   ->  Aggregate  (cost=140.92..140.94 rows=1 width=4)
                                         ->  Index Scan using lineitem_l_partkey_l_quantity_l_shipmode_idx on lineitem  (cost=0.00..140.92 rows=1 width=4)
                                               Index Cond: (l_partkey = partsupp.ps_partkey)
                                               Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate < '1996-01-01'::date) AND (l_suppkey = partsupp.ps_suppkey))
(23 rows)

COMMIT;
COMMIT
