Q21,1456415.0,->  Hash Semi Join  (cost=2692778.13..4872404.57 rows=1 width=38) (actual time=34201.128..71050.610 rows=1456415 loops=1)
Q18,353983.9,->  GroupAggregate  (cost=10466901.95..11304073.94 rows=30442618 width=39) (actual time=66389.995..66390.256 rows=86 loops=1)
Q3,313457.8,->  Sort  (cost=2742095.00..2749931.45 rows=3134578 width=20) (actual time=73521.970..73521.974 rows=10 loops=1)
Q18,88516.7,->  Hash Join  (cost=2206867.27..2999650.06 rows=7612440 width=39) (actual time=44185.085..49284.052 rows=86 loops=1)
Q18,88516.7,->  Hash Join  (cost=2137839.27..2778373.26 rows=7612440 width=20) (actual time=43331.845..48429.024 rows=86 loops=1)
Q18,88516.7,->  Hash  (cost=2999650.06..2999650.06 rows=7612440 width=39) (actual time=49284.356..49284.356 rows=86 loops=1)
Q21,80503.0,->  Hash Anti Join  (cost=4788914.07..6968540.52 rows=1 width=34) (actual time=74738.499..117100.189 rows=80503 loops=1)
Q18,50569.1,->  Sort  (cost=10466901.95..10543008.49 rows=30442618 width=39) (actual time=66389.975..66390.015 rows=602 loops=1)
Q18,50569.1,->  Hash Join  (cost=3094805.56..5850531.57 rows=30442618 width=39) (actual time=49374.531..66387.361 rows=602 loops=1)
Q18,47567.6,->  Hash  (cost=2086704.01..2086704.01 rows=4090821 width=4) (actual time=43282.816..43282.816 rows=86 loops=1)
Q18,47567.6,->  HashAggregate  (cost=1994660.54..2045795.80 rows=4090821 width=8) (actual time=37110.843..43282.361 rows=86 loops=1)
Q21,39414.0,->  Hash Join  (cost=5328910.33..7508536.81 rows=1 width=26) (actual time=83355.557..125993.105 rows=39414 loops=1)
Q10,27855.0,->  Sort  (cost=1181159.57..1182552.32 rows=557100 width=176) (actual time=29621.278..29621.284 rows=20 loops=1)
Q9,24401.9,->  Sort  (cost=3945638.38..3945638.72 rows=133 width=46) (actual time=6993480.036..6994520.248 rows=3245456 loops=1)
Q9,24401.9,->  Merge Join  (cost=2811397.16..3479380.83 rows=133 width=28) (actual time=100505.571..111291.121 rows=3245456 loops=1)
Q9,24401.9,->  Hash Join  (cost=3483813.06..3945633.69 rows=133 width=46) (actual time=113283.493..6973293.697 rows=3245456 loops=1)
Q9,24401.9,->  Hash Join  (cost=3483811.49..3945629.63 rows=133 width=24) (actual time=113283.384..6968699.175 rows=3245456 loops=1)
Q9,24401.9,->  Hash Join  (cost=3479382.49..3941197.97 rows=133 width=28) (actual time=113221.230..6961671.541 rows=3245456 loops=1)
Q9,24401.9,->  Hash  (cost=3479380.83..3479380.83 rows=133 width=28) (actual time=113218.532..113218.532 rows=3245456 loops=1)
Q7,14771.2,GroupAggregate  (cost=3884039.22..3885959.48 rows=59085 width=64) (actual time=99564.766..99591.575 rows=4 loops=1)
Q2,4702.0,->  Merge Join  (cost=465841.71..25447642.16 rows=1 width=190) (actual time=7470.454..248030.885 rows=4702 loops=1)
Q21,3981.0,->  HashAggregate  (cost=7508536.81..7508536.82 rows=1 width=26) (actual time=126048.944..126050.245 rows=3981 loops=1)
Q15,3681.0,->  Subquery Scan on revenue6  (cost=1187489.03..1187571.86 rows=3681 width=12) (actual time=23610.160..23624.412 rows=1 loops=1)
Q15,3681.0,->  Sort  (cost=1187789.88..1187799.08 rows=3681 width=12) (actual time=23624.453..23624.455 rows=1 loops=1)
Q15,3681.0,Merge Join  (cost=2358755.04..2363851.72 rows=3681 width=79) (actual time=23628.939..23628.943 rows=1 loops=1)
Q15,3681.0,->  HashAggregate  (cost=1187489.03..1187535.05 rows=3681 width=12) (actual time=23610.157..23624.407 rows=1 loops=1)
Q8,363.0,Sort  (cost=2598125.25..2598127.07 rows=726 width=38) (actual time=92110.914..92110.915 rows=2 loops=1)
Q8,363.0,->  HashAggregate  (cost=2598078.05..2598090.75 rows=726 width=38) (actual time=92110.801..92110.803 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=7508536.83..7508536.84 rows=1 width=26) (actual time=126052.954..126052.959 rows=100 loops=1)
Q21,100.0,Limit  (cost=7508536.83..7508536.84 rows=1 width=26) (actual time=126052.958..126052.974 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=25447642.17..25447642.17 rows=1 width=190) (actual time=248059.229..248059.255 rows=100 loops=1)
Q2,100.0,Limit  (cost=25447642.17..25447642.17 rows=1 width=190) (actual time=248059.237..248059.275 rows=100 loops=1)
Q11,34.8,Sort  (cost=676867.00..677667.00 rows=320000 width=12) (actual time=7863.676..7864.785 rows=9181 loops=1)
Q11,34.8,->  HashAggregate  (cost=323403.33..327403.33 rows=320000 width=12) (actual time=7728.395..7857.972 rows=9181 loops=1)
Q3,27.4,->  HashAggregate  (cost=2643012.12..2674357.90 rows=3134578 width=20) (actual time=73423.014..73501.145 rows=114196 loops=1)
Q15,27.1,->  HashAggregate  (cost=1170882.33..1170919.14 rows=3681 width=12) (actual time=7830.759..7907.310 rows=100000 loops=1)
Q15,12.4,->  Index Scan using pk_supplier on supplier  (cost=0.00..4791.46 rows=100000 width=71) (actual time=0.047..3.657 rows=8001 loops=1)
Q3,10.3,->  Hash Join  (cost=623750.21..2595993.45 rows=3134578 width=20) (actual time=28226.788..73024.998 rows=302520 loops=1)
Q4,10.0,->  Hash  (cost=1002518.19..1002518.19 rows=1363608 width=4) (actual time=49236.095..49236.095 rows=13753335 loops=1)
Q4,10.0,->  HashAggregate  (cost=988882.11..1002518.19 rows=1363608 width=4) (actual time=37280.844..46130.218 rows=13753335 loops=1)
Q16,5.6,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.00..8.45 rows=10 width=4) (actual time=0.068..0.510 rows=56 loops=1)
Q19,5.1,->  Seq Scan on lineitem  (cost=0.00..3364578.35 rows=199101 width=16) (actual time=0.046..27010.700 rows=1028153 loops=1)
Q5,5.0,Sort  (cost=2481355.38..2481355.44 rows=25 width=34) (actual time=40482.570..40482.571 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=2481354.55..2481354.80 rows=25 width=34) (actual time=40482.507..40482.510 rows=5 loops=1)
Q4,5.0,Sort  (cost=1304134.32..1304134.32 rows=1 width=16) (actual time=57488.406..57488.406 rows=5 loops=1)
Q4,5.0,->  HashAggregate  (cost=1304134.30..1304134.31 rows=1 width=16) (actual time=57488.235..57488.238 rows=5 loops=1)
Q13,4.3,Sort  (cost=921377.29..921377.79 rows=200 width=8) (actual time=68016.401..68016.403 rows=46 loops=1)
Q13,4.3,->  HashAggregate  (cost=921367.65..921369.65 rows=200 width=8) (actual time=68016.290..68016.300 rows=46 loops=1)
Q17,3.7,->  Hash Join  (cost=6564.44..10449060.18 rows=20001 width=4) (actual time=42.896..32277.306 rows=5382 loops=1)
Q4,3.3,->  Hash Join  (cost=1032086.17..1303359.82 rows=154895 width=16) (actual time=49488.211..57297.484 rows=521028 loops=1)
Q22,2.3,Sort  (cost=698975.55..698975.55 rows=3 width=20) (actual time=9972.928..9972.928 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=646006.14..646006.19 rows=3 width=20) (actual time=9972.779..9972.782 rows=7 loops=1)
Q20,2.2,->  Merge Join  (cost=7614.88..1128221684.59 rows=26693 width=4) (actual time=7.334..357165.561 rows=59115 loops=1)
Q2,2.0,->  Hash Join  (cost=17.03..3921.04 rows=1 width=4) (actual time=14.431..37.437 rows=2 loops=6368)
Q20,2.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.00..1128123573.20 rows=2666667 width=8) (actual time=0.610..354744.686 rows=5431703 loops=1)
Q16,2.0,->  Sort  (cost=446763.39..448246.81 rows=593368 width=40) (actual time=36200.701..36348.168 rows=1189682 loops=1)
Q16,2.0,->  Hash Join  (cost=57971.97..389863.65 rows=593368 width=40) (actual time=744.445..7596.114 rows=1189682 loops=1)
Q12,2.0,Sort  (cost=993849.55..993849.56 rows=1 width=27) (actual time=22581.417..22581.418 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=993849.53..993849.54 rows=1 width=27) (actual time=22581.326..22581.327 rows=2 loops=1)
Q10,2.0,->  Merge Join  (cost=327799.97..1059005.15 rows=557100 width=12) (actual time=5547.922..21273.941 rows=1120276 loops=1)
Q10,2.0,->  Hash Join  (cost=396829.53..1146836.84 rows=557100 width=176) (actual time=7406.128..25950.726 rows=1120276 loops=1)
Q10,2.0,->  Hash Join  (cost=396827.97..1139175.15 rows=557100 width=154) (actual time=7406.088..25310.759 rows=1120276 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=8.48..270966.48 rows=4000000 width=8) (actual time=0.573..3565.564 rows=7995520 loops=1)
Q4,1.8,->  Index Scan using lineitem_l_orderkey_idx_part1 on lineitem  (cost=0.00..938144.41 rows=20295079 width=4) (actual time=0.135..17127.609 rows=37927733 loops=1)
Q21,1.8,->  Seq Scan on lineitem l3  (cost=0.00..1842447.45 rows=20295079 width=8) (actual time=0.024..23653.014 rows=37927733 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..1842447.45 rows=20295079 width=8) (actual time=0.033..20472.350 rows=37927733 loops=1)
Q21,1.8,->  Hash Join  (cost=3645.32..1930317.35 rows=811803 width=34) (actual time=52.614..27999.015 rows=1510964 loops=1)
Q21,1.8,->  Hash  (cost=1842447.45..1842447.45 rows=20295079 width=8) (actual time=40524.633..40524.633 rows=37927733 loops=1)
Q20,1.6,Sort  (cost=1128226300.48..1128226303.15 rows=1068 width=51) (actual time=357514.480..357514.585 rows=1782 loops=1)
Q20,1.6,->  Hash Semi Join  (cost=1128222620.17..1128226246.76 rows=1068 width=51) (actual time=357456.854..357505.548 rows=1782 loops=1)
Q20,1.6,->  Hash  (cost=1128222285.18..1128222285.18 rows=26693 width=4) (actual time=357456.752..357456.752 rows=44706 loops=1)
Q20,1.6,->  HashAggregate  (cost=1128221751.32..1128222018.25 rows=26693 width=4) (actual time=357422.854..357446.049 rows=44706 loops=1)
Q1,1.5,Sort  (cost=4232242.91..4232242.93 rows=6 width=20) (actual time=78426.642..78426.643 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=4232242.73..4232242.83 rows=6 width=20) (actual time=78426.563..78426.565 rows=4 loops=1)
Q10,1.4,->  HashAggregate  (cost=1160764.34..1166335.34 rows=557100 width=176) (actual time=29116.199..29470.589 rows=374690 loops=1)
Q9,1.3,GroupAggregate  (cost=3945638.38..3945643.04 rows=133 width=46) (actual time=6993492.004..6996863.927 rows=175 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2906.55 rows=140462 width=0) (actual time=598.916..598.916 rows=190723 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=2941.66..41906.79 rows=140462 width=24) (actual time=606.480..718.168 rows=190723 loops=1)
Q18,1.1,Limit  (cost=10466901.95..10466904.70 rows=100 width=39) (actual time=66389.998..66390.267 rows=86 loops=1)
Q9,1.0,->  Sort  (cost=2811395.63..2819693.18 rows=3319019 width=28) (actual time=100505.428..101975.011 rows=3245456 loops=1)
Q9,1.0,->  Seq Scan on part  (cost=0.00..65522.00 rows=110109 width=4) (actual time=0.022..1803.999 rows=108037 loops=1)
Q9,1.0,->  Seq Scan on orders  (cost=0.00..405283.20 rows=15074920 width=8) (actual time=0.010..18861.226 rows=15015000 loops=1)
Q9,1.0,->  Seq Scan on lineitem  (cost=0.00..1673600.58 rows=60286058 width=24) (actual time=0.022..20278.325 rows=60046221 loops=1)
Q9,1.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.00..603091.29 rows=8000000 width=12) (actual time=0.029..5856.934 rows=7999949 loops=1)
Q9,1.0,->  Hash Join  (cost=66898.36..2451907.28 rows=3319019 width=28) (actual time=1881.897..97363.050 rows=3245456 loops=1)
Q9,1.0,->  Hash  (cost=65522.00..65522.00 rows=110109 width=4) (actual time=1881.594..1881.594 rows=108037 loops=1)
Q8,1.0,->  Seq Scan on lineitem  (cost=0.00..1671921.88 rows=60225588 width=20) (actual time=0.019..20575.008 rows=60045303 loops=1)
Q8,1.0,->  Hash Join  (cost=550808.61..2597608.05 rows=23500 width=38) (actual time=23438.608..91972.242 rows=24314 loops=1)
Q8,1.0,->  Hash Join  (cost=550807.05..2597165.86 rows=23500 width=16) (actual time=23438.477..91833.560 rows=24314 loops=1)
Q8,1.0,->  Hash Join  (cost=546378.05..2592266.86 rows=23500 width=16) (actual time=23325.024..91596.472 rows=24314 loops=1)
Q8,1.0,->  Hash Join  (cost=518576.79..2527928.60 rows=3630200 width=20) (actual time=23061.120..85656.326 rows=3649276 loops=1)
Q8,1.0,->  Hash Join  (cost=2.53..58905.53 rows=300000 width=4) (actual time=0.091..1432.132 rows=299493 loops=1)
Q8,1.0,->  Hash Join  (cost=158768.30..507229.75 rows=907763 width=8) (actual time=4885.650..22511.517 rows=911910 loops=1)
Q8,1.0,->  Hash  (cost=58905.53..58905.53 rows=300000 width=4) (actual time=1608.730..1608.730 rows=299493 loops=1)
Q8,1.0,->  Hash  (cost=507229.75..507229.75 rows=907763 width=8) (actual time=23060.248..23060.248 rows=911910 loops=1)
Q8,1.0,->  Hash  (cost=27639.43..27639.43 rows=12947 width=4) (actual time=259.911..259.911 rows=13250 loops=1)
Q8,1.0,->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..397.81 rows=12947 width=0) (actual time=7.348..7.348 rows=13250 loops=1)
Q8,1.0,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_idx  (cost=0.00..94978.07 rows=4538817 width=0) (actual time=3041.664..3041.664 rows=4575464 loops=1)
Q8,1.0,->  Bitmap Heap Scan on part  (cost=401.05..27639.43 rows=12947 width=4) (actual time=10.365..250.419 rows=13250 loops=1)
Q8,1.0,->  Bitmap Heap Scan on orders  (cost=96112.77..418476.02 rows=4538817 width=12) (actual time=3275.888..8936.005 rows=4561773 loops=1)
Q7,1.0,->  Sort  (cost=3884039.22..3884186.93 rows=59085 width=64) (actual time=99555.507..99562.555 rows=57656 loops=1)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..409314.79 rows=15224879 width=8) (actual time=0.019..3641.018 rows=15000000 loops=1)
Q7,1.0,->  Hash Join  (cost=89654.56..803466.93 rows=15224879 width=30) (actual time=1399.012..25214.935 rows=15000000 loops=1)
Q7,1.0,->  Hash Join  (cost=1388677.14..3879356.58 rows=59085 width=64) (actual time=36668.890..99275.397 rows=57656 loops=1)
Q7,1.0,->  Hash Join  (cost=1382871.58..3318894.15 rows=18478715 width=42) (actual time=36584.353..68448.489 rows=18228513 loops=1)
Q7,1.0,->  Hash  (cost=803466.93..803466.93 rows=15224879 width=30) (actual time=30046.350..30046.350 rows=15000000 loops=1)
Q7,1.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey__idx  (cost=0.00..384473.98 rows=18478715 width=0) (actual time=6117.118..6117.118 rows=18503145 loops=1)
Q7,1.0,->  Bitmap Heap Scan on lineitem  (cost=389093.66..1747656.38 rows=18478715 width=20) (actual time=6528.599..18934.893 rows=18228513 loops=1)
Q6,1.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey__idx  (cost=0.00..190113.06 rows=9085423 width=0) (actual time=7477.562..7477.562 rows=9135631 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=190302.68..1464390.69 rows=758468 width=8) (actual time=8085.005..22575.949 rows=761681 loops=1)
Q5,1.0,->  Seq Scan on lineitem  (cost=0.00..1690234.36 rows=60885236 width=16) (actual time=0.025..12380.633 rows=59984748 loops=1)
Q5,1.0,->  Hash Join  (cost=429251.06..2480608.55 rows=74600 width=34) (actual time=6046.437..40405.553 rows=72943 loops=1)
Q5,1.0,->  Hash Join  (cost=424572.06..2437882.91 rows=1865032 width=46) (actual time=5984.899..38637.240 rows=1815447 loops=1)
Q5,1.0,->  Hash Join  (cost=2.53..58905.53 rows=300000 width=38) (actual time=0.087..677.325 rows=299838 loops=1)
Q5,1.0,->  Hash Join  (cost=113290.86..418742.47 rows=466367 width=38) (actual time=1706.318..5800.286 rows=454302 loops=1)
Q5,1.0,->  Hash  (cost=58905.53..58905.53 rows=300000 width=38) (actual time=782.499..782.499 rows=299838 loops=1)
Q5,1.0,->  Hash  (cost=418742.47..418742.47 rows=466367 width=38) (actual time=5984.322..5984.322 rows=454302 loops=1)
Q5,1.0,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_idx  (cost=0.00..50052.37 rows=2331837 width=0) (actual time=837.424..837.424 rows=2310036 loops=1)
Q5,1.0,->  Bitmap Heap Scan on orders  (cost=50635.32..342678.88 rows=2331837 width=8) (actual time=923.526..2680.566 rows=2275625 loops=1)
Q4,1.0,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_idx  (cost=0.00..12378.77 rows=576477 width=0) (actual time=179.021..179.021 rows=576609 loops=1)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=12522.88..278236.04 rows=576477 width=20) (actual time=249.911..2386.352 rows=568018 loops=1)
Q3,1.0,->  Seq Scan on orders  (cost=0.00..441649.60 rows=7260927 width=16) (actual time=0.021..7139.521 rows=7259501 loops=1)
Q3,1.0,->  Seq Scan on lineitem  (cost=0.00..1818873.81 rows=32539639 width=12) (actual time=0.049..24931.227 rows=32516175 loops=1)
Q3,1.0,->  Hash Join  (cost=49686.17..605652.05 rows=1447853 width=12) (actual time=905.319..27250.238 rows=1455866 loops=1)
Q3,1.0,->  Hash  (cost=605652.05..605652.05 rows=1447853 width=12) (actual time=28224.464..28224.464 rows=1455866 loops=1)
Q3,1.0,->  Hash  (cost=45947.36..45947.36 rows=299105 width=4) (actual time=905.011..905.011 rows=300276 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..6855.77 rows=299105 width=0) (actual time=99.261..99.261 rows=300276 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=6930.54..45947.36 rows=299105 width=4) (actual time=111.464..780.836 rows=300276 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..409314.79 rows=15224879 width=4) (actual time=0.036..4565.491 rows=15000000 loops=1)
Q22,1.0,->  Hash  (cost=409314.79..409314.79 rows=15224879 width=4) (actual time=9011.672..9011.672 rows=15000000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=602567.44..645559.27 rows=59583 width=20) (actual time=9628.579..9952.207 rows=63622 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6582.82 rows=383052 width=0) (actual time=63.140..63.140 rows=382428 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer  (cost=6678.58..52011.69 rows=383052 width=4) (actual time=70.596..491.414 rows=382428 loops=1)
Q21,1.0,->  Seq Scan on orders  (cost=0.00..447376.99 rows=7409542 width=4) (actual time=0.021..6034.340 rows=7309513 loops=1)
Q21,1.0,->  Seq Scan on lineitem l2  (cost=0.00..1690234.36 rows=60885236 width=8) (actual time=0.019..18713.044 rows=59984748 loops=1)
Q21,1.0,->  Hash Join  (cost=1.32..3595.32 rows=4000 width=30) (actual time=0.061..50.925 rows=3981 loops=1)
Q21,1.0,->  Hash  (cost=447376.99..447376.99 rows=7409542 width=4) (actual time=8609.797..8609.797 rows=7309513 loops=1)
Q21,1.0,->  Hash  (cost=3595.32..3595.32 rows=4000 width=30) (actual time=52.438..52.438 rows=3981 loops=1)
Q21,1.0,->  Hash  (cost=1690234.36..1690234.36 rows=60885236 width=8) (actual time=34129.351..34129.351 rows=59984748 loops=1)
Q2,1.0,->  Sort  (cost=465841.66..469841.66 rows=1600000 width=168) (actual time=7392.919..7580.531 rows=1604000 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.00..102473.47 rows=7929 width=30) (actual time=0.094..1479.744 rows=7921 loops=1)
Q2,1.0,->  Hash Join  (cost=4006.53..300964.53 rows=1600000 width=168) (actual time=64.308..6063.834 rows=1604080 loops=1)
Q2,1.0,->  Hash Join  (cost=2.53..3756.53 rows=20000 width=4) (actual time=0.006..35.426 rows=20051 loops=6368)
Q2,1.0,->  Hash Join  (cost=2.53..3756.53 rows=20000 width=164) (actual time=0.053..52.693 rows=20051 loops=1)
Q2,1.0,->  Hash  (cost=3756.53..3756.53 rows=20000 width=164) (actual time=64.262..64.262 rows=20051 loops=1)
Q20,1.0,->  Index Scan using pk_part on part  (cost=0.00..97473.47 rows=20020 width=4) (actual time=0.013..1283.230 rows=21780 loops=1)
Q20,1.0,->  Hash Join  (cost=1.32..3595.32 rows=4000 width=55) (actual time=0.055..44.052 rows=3974 loops=1)
Q19,1.0,->  Hash Join  (cost=37522.56..3403899.26 rows=1022 width=8) (actual time=242.480..28338.636 rows=1091 loops=1)
Q19,1.0,->  Hash  (cost=37394.18..37394.18 rows=10271 width=30) (actual time=241.914..241.914 rows=10426 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_idx  (cost=0.00..8385.47 rows=399700 width=0) (actual time=61.663..61.663 rows=399409 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_idx  (cost=0.00..4174.27 rows=198980 width=0) (actual time=38.673..38.673 rows=199678 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.33 rows=7982 width=0) (actual time=3.448..3.448 rows=8055 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..288.69 rows=7921 width=0) (actual time=3.279..3.279 rows=8112 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..272.53 rows=7904 width=0) (actual time=3.040..3.040 rows=8011 loops=1)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=13423.87..37394.18 rows=10271 width=30) (actual time=115.434..237.542 rows=10426 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..409314.79 rows=15224879 width=16) (actual time=0.013..2486.380 rows=15000000 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1690234.36 rows=60885236 width=8) (actual time=0.032..9272.058 rows=59984748 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1690234.36 rows=60885236 width=8) (actual time=0.006..10823.105 rows=59984748 loops=1)
Q17,1.0,->  Seq Scan on lineitem  (cost=0.00..1690234.36 rows=60885236 width=12) (actual time=0.027..15404.570 rows=59984748 loops=1)
Q17,1.0,->  Hash  (cost=6539.80..6539.80 rows=1971 width=4) (actual time=38.832..38.832 rows=1987 loops=1)
Q17,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..68.45 rows=1971 width=0) (actual time=1.060..1.060 rows=1987 loops=1)
Q17,1.0,->  Bitmap Heap Scan on part  (cost=68.94..6539.80 rows=1971 width=4) (actual time=1.377..37.874 rows=1987 loops=1)
Q16,1.0,Sort  (cost=456511.89..456581.42 rows=27815 width=40) (actual time=37211.988..37215.578 rows=27839 loops=1)
Q16,1.0,->  Hash  (cost=54254.94..54254.94 rows=296684 width=40) (actual time=743.599..743.599 rows=297588 loops=1)
Q16,1.0,->  GroupAggregate  (cost=446763.39..454458.64 rows=27815 width=40) (actual time=36200.804..36861.494 rows=27839 loops=1)
Q16,1.0,->  Bitmap Index Scan on part_p_size_idx  (cost=0.00..5661.45 rows=319893 width=0) (actual time=65.430..65.430 rows=320548 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=5735.62..54254.94 rows=296684 width=40) (actual time=75.156..620.589 rows=297588 loops=1)
Q15,1.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey__idx  (cost=0.00..46365.10 rows=2214227 width=0) (actual time=1641.255..1641.255 rows=2249378 loops=1)
Q15,1.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey__idx  (cost=0.00..46365.10 rows=2214227 width=0) (actual time=1634.301..1634.301 rows=2249378 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem  (cost=46918.66..1148740.06 rows=2214227 width=12) (actual time=2035.850..5048.397 rows=2244721 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem  (cost=46918.66..1148740.06 rows=2214227 width=12) (actual time=1973.870..12099.992 rows=2244721 loops=1)
Q14,1.0,->  Hash Join  (cost=101958.31..1172191.22 rows=780242 width=29) (actual time=1885.256..6893.246 rows=772465 loops=1)
Q14,1.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey__idx  (cost=0.00..16241.25 rows=780242 width=0) (actual time=316.394..316.394 rows=784005 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=16436.31..1069113.77 rows=780242 width=12) (actual time=467.238..3293.514 rows=772465 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..442089.90 rows=14909990 width=8) (actual time=0.042..10392.178 rows=14853772 loops=1)
Q13,1.0,->  Hash Right Join  (cost=69028.00..809317.70 rows=14909990 width=8) (actual time=1063.669..47588.292 rows=15353794 loops=1)
Q12,1.0,->  Seq Scan on orders  (cost=0.00..409314.79 rows=15224879 width=20) (actual time=0.024..4364.481 rows=15000000 loops=1)
Q12,1.0,->  Index Scan using lineitem_l_orderkey_idx_part2 on lineitem  (cost=0.00..380052.28 rows=290697 width=15) (actual time=2.522..12718.084 rows=310728 loops=1)
Q12,1.0,->  Hash Join  (cost=599625.78..988762.33 rows=290697 width=27) (actual time=8730.605..22269.823 rows=310728 loops=1)
Q12,1.0,->  Hash  (cost=409314.79..409314.79 rows=15224879 width=20) (actual time=8717.225..8717.225 rows=15000000 loops=1)
Q11,1.0,->  Hash Join  (cost=3645.32..317803.33 rows=320000 width=8) (actual time=31.444..3050.884 rows=321840 loops=1)
Q11,1.0,->  Hash Join  (cost=3645.32..317803.33 rows=320000 width=12) (actual time=54.127..4327.334 rows=321840 loops=1)
Q11,1.0,->  Hash Join  (cost=1.32..3595.32 rows=4000 width=4) (actual time=0.047..30.247 rows=4023 loops=1)
Q11,1.0,->  Hash Join  (cost=1.32..3595.32 rows=4000 width=4) (actual time=0.043..52.669 rows=4023 loops=1)
Q11,1.0,->  Hash  (cost=3595.32..3595.32 rows=4000 width=4) (actual time=54.032..54.032 rows=4023 loops=1)
Q11,1.0,->  Hash  (cost=3595.32..3595.32 rows=4000 width=4) (actual time=31.353..31.353 rows=4023 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..1842447.45 rows=59744882 width=20) (actual time=0.027..17377.527 rows=58881943 loops=1)
Q10,1.0,->  Sort  (cost=327798.26..329207.80 rows=563815 width=8) (actual time=5547.792..5709.375 rows=560377 loops=1)
Q10,1.0,->  Index Scan using lineitem_l_orderkey_idx_l_returnflag on lineitem  (cost=0.00..685726.45 rows=14836147 width=12) (actual time=0.095..12467.976 rows=14808300 loops=1)
Q10,1.0,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_idx  (cost=0.00..11820.05 rows=563815 width=0) (actual time=275.792..275.792 rows=560968 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=11961.00..273940.22 rows=563815 width=8) (actual time=383.850..5084.427 rows=560377 loops=1)
Q19,,->  BitmapOr  (cost=13423.87..13423.87 rows=10281 width=0) (actual time=113.767..113.767 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=8679.54..8679.54 rows=1583 width=0) (actual time=66.614..66.614 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=4468.98..4468.98 rows=794 width=0) (actual time=43.840..43.840 rows=0 loops=1)
