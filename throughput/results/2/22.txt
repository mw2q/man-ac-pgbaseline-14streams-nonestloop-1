BEGIN;
BEGIN
EXPLAIN (ANALYZE, BUFFERS)
select
	cntrycode,
	count(*) as numcust,
	sum(c_acctbal) as totacctbal
from
	(
		select
			substr(c_phone, 1, 2) as cntrycode,
			c_acctbal
		from
			customer
		where
			substr(c_phone, 1, 2) in
				('10', '17', '29', '31', '13', '34', '21')
			and c_acctbal > (
				select
					avg(c_acctbal)
				from
					customer
				where
					c_acctbal > 0.00
					and substr(c_phone, 1, 2) in
						('10', '17', '29', '31', '13', '34', '21')
			)
			and not exists (
				select
					*
				from
					orders
				where
					o_custkey = c_custkey
			)
	) as vip
group by
	cntrycode
order by
	cntrycode;
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=698790.04..698790.05 rows=3 width=20) (actual time=11998.365..11998.365 rows=7 loops=1)
   Sort Key: (substr((public.customer.c_phone)::text, 1, 2))
   Sort Method: quicksort  Memory: 25kB
   Buffers: shared hit=13947 read=315164 written=6
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=52866.18..52866.19 rows=1 width=4) (actual time=698.554..698.554 rows=1 loops=1)
           Buffers: shared hit=8 read=36334 written=6
           ->  Bitmap Heap Scan on customer  (cost=6637.76..51913.97 rows=380884 width=4) (actual time=83.830..628.219 rows=381968 loops=1)
                 Recheck Cond: ((substr((c_phone)::text, 1, 2) = ANY ('{10,17,29,31,13,34,21}'::text[])) AND (c_acctbal > 0::double precision))
                 Buffers: shared hit=8 read=36334 written=6
                 ->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6542.54 rows=380884 width=0) (actual time=75.387..75.387 rows=381968 loops=1)
                       Index Cond: (substr((c_phone)::text, 1, 2) = ANY ('{10,17,29,31,13,34,21}'::text[]))
                       Buffers: shared hit=6 read=1058
   ->  HashAggregate  (cost=645923.78..645923.83 rows=3 width=20) (actual time=11998.295..11998.297 rows=7 loops=1)
         Buffers: shared hit=13945 read=315164 written=6
         ->  Hash Anti Join  (cost=602531.26..645479.44 rows=59245 width=20) (actual time=11299.951..11971.554 rows=63675 loops=1)
               Hash Cond: (public.customer.c_custkey = orders.o_custkey)
               Buffers: shared hit=13945 read=315164 written=6
               ->  Bitmap Heap Scan on customer  (cost=2905.48..41849.74 rows=139667 width=24) (actual time=759.651..1156.835 rows=190810 loops=1)
                     Recheck Cond: ((substr((c_phone)::text, 1, 2) = ANY ('{10,17,29,31,13,34,21}'::text[])) AND (c_acctbal > $0))
                     Buffers: shared hit=19 read=72021 written=6
                     ->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2870.57 rows=139667 width=0) (actual time=751.067..751.067 rows=190810 loops=1)
                           Index Cond: ((substr((c_phone)::text, 1, 2) = ANY ('{10,17,29,31,13,34,21}'::text[])) AND (c_acctbal > $0))
                           Buffers: shared hit=17 read=36872 written=6
               ->  Hash  (cost=409314.79..409314.79 rows=15224879 width=4) (actual time=10528.890..10528.890 rows=15000000 loops=1)
                     Buckets: 2097152  Batches: 1  Memory Usage: 527344kB
                     Buffers: shared hit=13923 read=243143
                     ->  Seq Scan on orders  (cost=0.00..409314.79 rows=15224879 width=4) (actual time=0.047..5124.651 rows=15000000 loops=1)
                           Buffers: shared hit=13923 read=243143
 Total runtime: 12057.837 ms
(30 rows)

COMMIT;
COMMIT
