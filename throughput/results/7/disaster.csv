Q21,1472345.0,->  Hash Semi Join  (cost=2679509.37..4848379.76 rows=1 width=38) (actual time=35225.612..73702.902 rows=1472345 loops=1)
Q18,400306.1,->  GroupAggregate  (cost=10323098.16..11148729.61 rows=30022962 width=39) (actual time=110012.326..110012.574 rows=75 loops=1)
Q3,319890.5,->  Sort  (cost=2778921.68..2786918.94 rows=3198905 width=20) (actual time=47394.989..47394.991 rows=10 loops=1)
Q18,100099.8,->  Hash Join  (cost=2179370.61..2961787.80 rows=7507492 width=39) (actual time=71746.986..82581.832 rows=75 loops=1)
Q18,100099.8,->  Hash Join  (cost=2110342.61..2742609.96 rows=7507492 width=20) (actual time=70040.885..80873.707 rows=75 loops=1)
Q18,100099.8,->  Hash  (cost=2961787.80..2961787.80 rows=7507492 width=39) (actual time=82582.195..82582.195 rows=75 loops=1)
Q21,80910.0,->  Hash Anti Join  (cost=4765302.07..6934172.47 rows=1 width=34) (actual time=76725.498..120978.477 rows=80910 loops=1)
Q18,57186.5,->  Sort  (cost=10323098.16..10398155.56 rows=30022962 width=39) (actual time=110012.309..110012.338 rows=525 loops=1)
Q18,57186.5,->  Hash Join  (cost=3055631.45..5773369.38 rows=30022962 width=39) (actual time=82991.369..110009.553 rows=525 loops=1)
Q18,54544.2,->  Hash  (cost=2059207.35..2059207.35 rows=4090821 width=4) (actual time=69790.097..69790.097 rows=75 loops=1)
Q18,54544.2,->  HashAggregate  (cost=1967163.88..2018299.14 rows=4090821 width=8) (actual time=61568.369..69789.489 rows=75 loops=1)
Q21,39447.0,->  Hash Join  (cost=5302641.07..7471511.50 rows=1 width=26) (actual time=86568.861..131056.463 rows=39447 loops=1)
Q10,28680.8,->  Sort  (cost=1199247.16..1200681.20 rows=573616 width=176) (actual time=24048.520..24048.523 rows=20 loops=1)
Q9,22659.3,->  Merge Join  (cost=2869694.65..3539754.21 rows=144 width=28) (actual time=86637.027..93576.140 rows=3262947 loops=1)
Q9,22659.3,->  Hash Join  (cost=3539756.01..4006165.54 rows=144 width=28) (actual time=94460.197..7909248.316 rows=3262947 loops=1)
Q9,22659.3,->  Hash  (cost=3539754.21..3539754.21 rows=144 width=28) (actual time=94457.046..94457.046 rows=3262947 loops=1)
Q9,22503.0,->  Sort  (cost=4010606.90..4010607.27 rows=145 width=46) (actual time=7943582.843..7944551.589 rows=3262947 loops=1)
Q9,22503.0,->  Hash Join  (cost=3544186.57..4010601.70 rows=145 width=46) (actual time=94521.928..7923280.119 rows=3262947 loops=1)
Q9,22503.0,->  Hash Join  (cost=3544185.01..4010597.42 rows=145 width=24) (actual time=94521.797..7918422.839 rows=3262947 loops=1)
Q7,14771.2,GroupAggregate  (cost=3884039.22..3885959.48 rows=59085 width=64) (actual time=115837.092..115861.214 rows=4 loops=1)
Q2,4750.0,->  Merge Join  (cost=465841.71..25392747.22 rows=1 width=190) (actual time=10960.079..271306.207 rows=4750 loops=1)
Q21,4021.0,->  HashAggregate  (cost=7471511.50..7471511.51 rows=1 width=26) (actual time=131119.520..131121.353 rows=4021 loops=1)
Q15,3746.0,->  Subquery Scan on revenue7  (cost=1203537.10..1203621.38 rows=3746 width=12) (actual time=15140.228..15183.597 rows=1 loops=1)
Q15,3746.0,->  Sort  (cost=1203843.73..1203853.09 rows=3746 width=12) (actual time=15183.629..15183.632 rows=1 loops=1)
Q15,3746.0,Merge Join  (cost=2390359.81..2395457.46 rows=3746 width=79) (actual time=15216.692..15216.697 rows=1 loops=1)
Q15,3746.0,->  HashAggregate  (cost=1203537.10..1203583.92 rows=3746 width=12) (actual time=15140.226..15183.593 rows=1 loops=1)
Q8,363.0,Sort  (cost=2596174.37..2596176.19 rows=726 width=38) (actual time=86420.317..86420.318 rows=2 loops=1)
Q8,363.0,->  HashAggregate  (cost=2596127.17..2596139.87 rows=726 width=38) (actual time=86420.228..86420.230 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=7471511.52..7471511.53 rows=1 width=26) (actual time=131124.471..131124.480 rows=100 loops=1)
Q21,100.0,Limit  (cost=7471511.52..7471511.53 rows=1 width=26) (actual time=131124.477..131124.498 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=25392747.23..25392747.23 rows=1 width=190) (actual time=271340.102..271340.132 rows=100 loops=1)
Q2,100.0,Limit  (cost=25392747.23..25392747.23 rows=1 width=190) (actual time=271340.107..271340.151 rows=100 loops=1)
Q11,32.9,Sort  (cost=676867.00..677667.00 rows=320000 width=12) (actual time=9874.629..9875.881 rows=9722 loops=1)
Q11,32.9,->  HashAggregate  (cost=323403.33..327403.33 rows=320000 width=12) (actual time=9752.377..9868.440 rows=9722 loops=1)
Q3,28.1,->  HashAggregate  (cost=2677805.44..2709794.49 rows=3198905 width=20) (actual time=47334.054..47377.069 rows=113460 loops=1)
Q15,26.6,->  HashAggregate  (cost=1186431.79..1186469.25 rows=3746 width=12) (actual time=6961.434..7037.028 rows=100000 loops=1)
Q3,10.6,->  Hash Join  (cost=633355.71..2629821.86 rows=3198905 width=20) (actual time=20592.707..47075.550 rows=300249 loops=1)
Q4,10.0,->  Hash  (cost=1002518.19..1002518.19 rows=1363608 width=4) (actual time=53014.438..53014.438 rows=13753335 loops=1)
Q4,10.0,->  HashAggregate  (cost=988882.11..1002518.19 rows=1363608 width=4) (actual time=39643.697..49980.791 rows=13753335 loops=1)
Q19,6.0,->  Seq Scan on lineitem  (cost=0.00..3364578.35 rows=199448 width=16) (actual time=0.080..22815.838 rows=1199996 loops=1)
Q16,5.6,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.00..8.45 rows=10 width=4) (actual time=0.070..0.727 rows=56 loops=1)
Q5,5.0,Sort  (cost=2481355.38..2481355.44 rows=25 width=34) (actual time=39582.923..39582.923 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=2481354.55..2481354.80 rows=25 width=34) (actual time=39582.855..39582.856 rows=5 loops=1)
Q4,5.0,Sort  (cost=1304325.23..1304325.24 rows=1 width=16) (actual time=61722.823..61722.824 rows=5 loops=1)
Q4,5.0,->  HashAggregate  (cost=1304325.21..1304325.22 rows=1 width=16) (actual time=61722.677..61722.678 rows=5 loops=1)
Q13,4.3,Sort  (cost=930743.38..930743.88 rows=200 width=8) (actual time=36828.266..36828.269 rows=46 loops=1)
Q13,4.3,->  HashAggregate  (cost=930733.74..930735.74 rows=200 width=8) (actual time=36828.163..36828.173 rows=46 loops=1)
Q17,3.8,->  Hash Join  (cost=6788.04..10775077.76 rows=20772 width=4) (actual time=71.623..27312.994 rows=5382 loops=1)
Q4,3.3,->  Hash Join  (cost=1032171.73..1303545.29 rows=155985 width=16) (actual time=53311.264..61531.411 rows=526373 loops=1)
Q22,2.3,Sort  (cost=699001.55..699001.56 rows=3 width=20) (actual time=11363.831..11363.832 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=646016.73..646016.78 rows=3 width=20) (actual time=11363.765..11363.767 rows=7 loops=1)
Q2,2.0,->  Hash Join  (cost=17.03..3921.04 rows=1 width=4) (actual time=16.070..40.414 rows=2 loops=6378)
Q20,2.0,->  Merge Join  (cost=7614.88..1128221716.29 rows=29363 width=4) (actual time=49.405..537874.113 rows=59192 loops=1)
Q20,2.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.00..1128123573.20 rows=2666667 width=8) (actual time=0.782..534614.911 rows=5433031 loops=1)
Q12,2.0,Sort  (cost=994044.16..994044.17 rows=1 width=27) (actual time=22507.950..22507.950 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=994044.14..994044.15 rows=1 width=27) (actual time=22507.867..22507.868 rows=2 loops=1)
Q16,1.9,->  Sort  (cost=447654.83..449154.09 rows=599706 width=40) (actual time=37443.188..37712.744 rows=1188316 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=8.48..270966.48 rows=4000000 width=8) (actual time=0.778..3882.465 rows=7995520 loops=1)
Q16,1.9,->  Hash Join  (cost=58146.30..390101.36 rows=599706 width=40) (actual time=904.344..9928.393 rows=1188316 loops=1)
Q10,1.9,->  Merge Join  (cost=333961.28..1075517.79 rows=573616 width=12) (actual time=3447.537..17851.573 rows=1135547 loops=1)
Q10,1.9,->  Hash Join  (cost=402990.85..1163906.89 rows=573616 width=176) (actual time=5037.377..21679.666 rows=1135547 loops=1)
Q10,1.9,->  Hash Join  (cost=402989.28..1156018.11 rows=573616 width=154) (actual time=5037.339..21280.806 rows=1135547 loops=1)
Q4,1.8,->  Index Scan using lineitem_l_orderkey_idx_part1 on lineitem  (cost=0.00..938144.41 rows=20295079 width=4) (actual time=0.101..18345.702 rows=37927733 loops=1)
Q21,1.8,->  Seq Scan on lineitem l3  (cost=0.00..1833356.02 rows=20194934 width=8) (actual time=0.029..23909.507 rows=37965313 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..1833356.02 rows=20194934 width=8) (actual time=0.030..21360.771 rows=37965313 loops=1)
Q21,1.8,->  Hash Join  (cost=3645.32..1920810.32 rows=807797 width=34) (actual time=42.145..29180.444 rows=1526980 loops=1)
Q21,1.8,->  Hash  (cost=1833356.02..1833356.02 rows=20194934 width=8) (actual time=41477.001..41477.001 rows=37965313 loops=1)
Q15,1.6,->  Index Scan using pk_supplier on supplier  (cost=0.00..4791.46 rows=100000 width=71) (actual time=0.082..26.652 rows=61965 loops=1)
Q20,1.5,Sort  (cost=1128226433.74..1128226436.68 rows=1175 width=51) (actual time=538327.895..538328.069 rows=1783 loops=1)
Q20,1.5,->  Hash Semi Join  (cost=1128222745.32..1128226373.83 rows=1175 width=51) (actual time=538260.862..538308.228 rows=1783 loops=1)
Q20,1.5,->  Hash  (cost=1128222376.96..1128222376.96 rows=29363 width=4) (actual time=538260.747..538260.747 rows=44706 loops=1)
Q20,1.5,->  HashAggregate  (cost=1128221789.70..1128222083.33 rows=29363 width=4) (actual time=538225.774..538250.205 rows=44706 loops=1)
Q1,1.5,Sort  (cost=4225040.67..4225040.69 rows=6 width=20) (actual time=82886.631..82886.631 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=4225040.49..4225040.59 rows=6 width=20) (actual time=82886.547..82886.549 rows=4 loops=1)
Q10,1.5,->  HashAggregate  (cost=1178247.29..1183983.45 rows=573616 width=176) (actual time=23683.412..23914.241 rows=378498 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2908.09 rows=140617 width=0) (actual time=563.220..563.220 rows=190742 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=2943.24..41912.44 rows=140617 width=24) (actual time=572.273..722.736 rows=190742 loops=1)
Q18,1.3,Limit  (cost=10323098.16..10323100.91 rows=100 width=39) (actual time=110012.330..110012.595 rows=75 loops=1)
Q9,1.2,GroupAggregate  (cost=4010606.90..4010611.98 rows=145 width=46) (actual time=7943593.066..7946622.352 rows=175 loops=1)
Q9,1.1,->  Sort  (cost=2869693.12..2878682.60 rows=3595791 width=28) (actual time=86636.668..87840.082 rows=3262947 loops=1)
Q9,1.1,->  Hash Join  (cost=66998.46..2478149.64 rows=3595791 width=28) (actual time=1011.402..84065.667 rows=3262947 loops=1)
Q9,1.0,->  Seq Scan on part  (cost=0.00..65522.00 rows=118117 width=4) (actual time=0.066..968.120 rows=108791 loops=1)
Q9,1.0,->  Seq Scan on orders  (cost=0.00..409314.79 rows=15224879 width=8) (actual time=0.008..20008.325 rows=15000000 loops=1)
Q9,1.0,->  Seq Scan on lineitem  (cost=0.00..1690234.36 rows=60885236 width=24) (actual time=0.033..15639.188 rows=59984748 loops=1)
Q9,1.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.00..603091.29 rows=8000000 width=12) (actual time=0.018..3398.696 rows=7999917 loops=1)
Q9,1.0,->  Hash  (cost=65522.00..65522.00 rows=118117 width=4) (actual time=1011.073..1011.073 rows=108791 loops=1)
Q8,1.0,->  Seq Scan on lineitem  (cost=0.00..1670268.19 rows=60166019 width=20) (actual time=0.018..17663.393 rows=60045379 loops=1)
Q8,1.0,->  Hash Join  (cost=550839.54..2595645.09 rows=24104 width=38) (actual time=19724.742..86289.757 rows=23928 loops=1)
Q8,1.0,->  Hash Join  (cost=550837.98..2595191.57 rows=24104 width=16) (actual time=19724.632..86160.622 rows=23928 loops=1)
Q8,1.0,->  Hash Join  (cost=546408.98..2590280.49 rows=24104 width=16) (actual time=19621.653..85935.218 rows=23928 loops=1)
Q8,1.0,->  Hash Join  (cost=518172.51..2525536.88 rows=3626610 width=20) (actual time=19318.855..80095.014 rows=3642605 loops=1)
Q8,1.0,->  Hash Join  (cost=2.53..58905.53 rows=300000 width=4) (actual time=0.133..1077.842 rows=299436 loops=1)
Q8,1.0,->  Hash Join  (cost=158722.01..506836.76 rows=906860 width=8) (actual time=4261.755..18737.102 rows=911247 loops=1)
Q8,1.0,->  Hash  (cost=58905.53..58905.53 rows=300000 width=4) (actual time=1210.306..1210.306 rows=299436 loops=1)
Q8,1.0,->  Hash  (cost=506836.76..506836.76 rows=906860 width=8) (actual time=19317.954..19317.954 rows=911247 loops=1)
Q8,1.0,->  Hash  (cost=28070.31..28070.31 rows=13293 width=4) (actual time=298.746..298.746 rows=13163 loops=1)
Q8,1.0,->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..408.41 rows=13293 width=0) (actual time=6.740..6.740 rows=13163 loops=1)
Q8,1.0,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_idx  (cost=0.00..94932.91 rows=4534301 width=0) (actual time=2900.933..2900.933 rows=4570988 loops=1)
Q8,1.0,->  Bitmap Heap Scan on part  (cost=411.73..28070.31 rows=13293 width=4) (actual time=9.613..288.555 rows=13163 loops=1)
Q8,1.0,->  Bitmap Heap Scan on orders  (cost=96066.48..418109.00 rows=4534301 width=12) (actual time=3051.198..6256.401 rows=4561956 loops=1)
Q7,1.0,->  Sort  (cost=3884039.22..3884186.93 rows=59085 width=64) (actual time=115829.133..115832.731 rows=57841 loops=1)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..409314.79 rows=15224879 width=8) (actual time=0.024..3786.640 rows=15000000 loops=1)
Q7,1.0,->  Hash Join  (cost=89654.56..803466.93 rows=15224879 width=30) (actual time=1272.500..35141.963 rows=15000000 loops=1)
Q7,1.0,->  Hash Join  (cost=1388677.14..3879356.58 rows=59085 width=64) (actual time=51151.729..115626.289 rows=57841 loops=1)
Q7,1.0,->  Hash Join  (cost=1382871.58..3318894.15 rows=18478715 width=42) (actual time=51055.719..82273.804 rows=18228513 loops=1)
Q7,1.0,->  Hash  (cost=803466.93..803466.93 rows=15224879 width=30) (actual time=40777.119..40777.119 rows=15000000 loops=1)
Q7,1.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey__idx  (cost=0.00..384473.98 rows=18478715 width=0) (actual time=9756.475..9756.475 rows=18503145 loops=1)
Q7,1.0,->  Bitmap Heap Scan on lineitem  (cost=389093.66..1747656.38 rows=18478715 width=20) (actual time=10271.811..22504.264 rows=18228513 loops=1)
Q6,1.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey__idx  (cost=0.00..191108.19 rows=9184936 width=0) (actual time=3690.397..3690.397 rows=9235309 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=191308.33..1479351.39 rows=800578 width=8) (actual time=4275.606..14089.787 rows=793645 loops=1)
Q5,1.0,->  Seq Scan on lineitem  (cost=0.00..1690234.36 rows=60885236 width=16) (actual time=0.025..11933.937 rows=59984748 loops=1)
Q5,1.0,->  Hash Join  (cost=429251.06..2480608.55 rows=74600 width=34) (actual time=5762.223..39509.087 rows=72261 loops=1)
Q5,1.0,->  Hash Join  (cost=424572.06..2437882.91 rows=1865032 width=46) (actual time=5700.254..37706.753 rows=1821585 loops=1)
Q5,1.0,->  Hash Join  (cost=2.53..58905.53 rows=300000 width=38) (actual time=0.080..655.966 rows=299493 loops=1)
Q5,1.0,->  Hash Join  (cost=113290.86..418742.47 rows=466367 width=38) (actual time=1484.481..5531.006 rows=454752 loops=1)
Q5,1.0,->  Hash  (cost=58905.53..58905.53 rows=300000 width=38) (actual time=746.476..746.476 rows=299493 loops=1)
Q5,1.0,->  Hash  (cost=418742.47..418742.47 rows=466367 width=38) (actual time=5699.727..5699.727 rows=454752 loops=1)
Q5,1.0,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_idx  (cost=0.00..50052.37 rows=2331837 width=0) (actual time=662.048..662.048 rows=2310036 loops=1)
Q5,1.0,->  Bitmap Heap Scan on orders  (cost=50635.32..342678.88 rows=2331837 width=8) (actual time=737.699..2617.591 rows=2275625 loops=1)
Q4,1.0,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_idx  (cost=0.00..12463.31 rows=580531 width=0) (actual time=217.433..217.433 rows=582725 loops=1)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=12608.44..278382.40 rows=580531 width=20) (actual time=294.777..1535.350 rows=574228 loops=1)
Q3,1.0,->  Seq Scan on orders  (cost=0.00..447376.99 rows=7456050 width=16) (actual time=0.015..4192.832 rows=7352077 loops=1)
Q3,1.0,->  Seq Scan on lineitem  (cost=0.00..1842447.45 rows=32541241 width=12) (actual time=0.107..16306.478 rows=32082940 loops=1)
Q3,1.0,->  Hash Join  (cost=49783.34..614647.55 rows=1496653 width=12) (actual time=402.525..20031.621 rows=1470195 loops=1)
Q3,1.0,->  Hash  (cost=614647.55..614647.55 rows=1496653 width=12) (actual time=20590.181..20590.181 rows=1470195 loops=1)
Q3,1.0,->  Hash  (cost=46019.65..46019.65 rows=301095 width=4) (actual time=402.278..402.278 rows=300441 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..6902.69 rows=301095 width=0) (actual time=61.463..61.463 rows=300441 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=6977.97..46019.65 rows=301095 width=4) (actual time=69.650..333.758 rows=300441 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..409314.79 rows=15224879 width=4) (actual time=0.027..4850.647 rows=15000000 loops=1)
Q22,1.0,->  Hash  (cost=409314.79..409314.79 rows=15224879 width=4) (actual time=10395.133..10395.133 rows=15000000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=602569.02..645569.37 rows=59648 width=20) (actual time=10978.930..11342.867 rows=63608 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6585.97 rows=383475 width=0) (actual time=81.637..81.637 rows=381821 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer  (cost=6681.83..52026.05 rows=383475 width=4) (actual time=90.572..425.304 rows=381821 loops=1)
Q21,1.0,->  Seq Scan on orders  (cost=0.00..445175.49 rows=7373081 width=4) (actual time=0.050..6937.325 rows=7316959 loops=1)
Q21,1.0,->  Seq Scan on lineitem l2  (cost=0.00..1681894.02 rows=60584802 width=8) (actual time=0.012..19715.238 rows=60044176 loops=1)
Q21,1.0,->  Hash Join  (cost=1.32..3595.32 rows=4000 width=30) (actual time=0.070..40.585 rows=4021 loops=1)
Q21,1.0,->  Hash  (cost=445175.49..445175.49 rows=7373081 width=4) (actual time=9838.441..9838.441 rows=7316959 loops=1)
Q21,1.0,->  Hash  (cost=3595.32..3595.32 rows=4000 width=30) (actual time=42.014..42.014 rows=4021 loops=1)
Q21,1.0,->  Hash  (cost=1681894.02..1681894.02 rows=60584802 width=8) (actual time=35165.781..35165.781 rows=60044176 loops=1)
Q2,1.0,->  Sort  (cost=465841.66..469841.66 rows=1600000 width=168) (actual time=10904.699..11104.819 rows=1602475 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.00..102473.47 rows=7911 width=30) (actual time=0.066..1832.334 rows=8061 loops=1)
Q2,1.0,->  Hash Join  (cost=4006.53..300964.53 rows=1600000 width=168) (actual time=78.860..9538.194 rows=1602640 loops=1)
Q2,1.0,->  Hash Join  (cost=2.53..3756.53 rows=20000 width=4) (actual time=0.010..38.274 rows=20033 loops=6378)
Q2,1.0,->  Hash Join  (cost=2.53..3756.53 rows=20000 width=164) (actual time=0.044..67.177 rows=20033 loops=1)
Q2,1.0,->  Hash  (cost=3756.53..3756.53 rows=20000 width=164) (actual time=78.818..78.818 rows=20033 loops=1)
Q20,1.0,->  Index Scan using pk_part on part  (cost=0.00..97473.47 rows=22022 width=4) (actual time=0.073..1470.392 rows=21740 loops=1)
Q20,1.0,->  Hash Join  (cost=1.32..3595.32 rows=4000 width=55) (actual time=0.046..40.386 rows=4004 loops=1)
Q19,1.0,->  Hash Join  (cost=37527.47..3403907.37 rows=1025 width=8) (actual time=228.164..23705.062 rows=1089 loops=1)
Q19,1.0,->  Hash  (cost=37399.03..37399.03 rows=10275 width=30) (actual time=207.477..207.477 rows=10391 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_idx  (cost=0.00..8385.47 rows=399700 width=0) (actual time=58.104..58.104 rows=399409 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_idx  (cost=0.00..4174.27 rows=198980 width=0) (actual time=36.748..36.748 rows=199678 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..288.69 rows=7920 width=0) (actual time=3.069..3.069 rows=7853 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..288.69 rows=7918 width=0) (actual time=2.848..2.848 rows=7979 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..272.25 rows=7877 width=0) (actual time=3.416..3.416 rows=7987 loops=1)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=13422.96..37399.03 rows=10275 width=30) (actual time=109.299..203.851 rows=10391 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..403671.84 rows=15014984 width=16) (actual time=0.013..5582.256 rows=15000000 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1666934.25 rows=60045925 width=8) (actual time=0.053..15359.824 rows=59985329 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1666934.25 rows=60045925 width=8) (actual time=0.020..17756.910 rows=59985329 loops=1)
Q17,1.0,->  Seq Scan on lineitem  (cost=0.00..1690234.36 rows=60885236 width=12) (actual time=0.018..11743.626 rows=59984748 loops=1)
Q17,1.0,->  Hash  (cost=6762.45..6762.45 rows=2047 width=4) (actual time=30.252..30.252 rows=1980 loops=1)
Q17,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..73.21 rows=2047 width=0) (actual time=0.919..0.919 rows=1980 loops=1)
Q17,1.0,->  Bitmap Heap Scan on part  (cost=73.72..6762.45 rows=2047 width=4) (actual time=1.222..29.394 rows=1980 loops=1)
Q16,1.0,Sort  (cost=457509.60..457579.88 rows=28112 width=40) (actual time=38623.224..38624.935 rows=27839 loops=1)
Q16,1.0,->  Hash  (cost=54389.66..54389.66 rows=299853 width=40) (actual time=903.314..903.314 rows=297249 loops=1)
Q16,1.0,->  GroupAggregate  (cost=447654.83..455432.27 rows=28112 width=40) (actual time=37443.272..38291.255 rows=27839 loops=1)
Q16,1.0,->  Bitmap Index Scan on part_p_size_idx  (cost=0.00..5713.87 rows=323153 width=0) (actual time=61.990..61.990 rows=320086 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=5788.83..54389.66 rows=299853 width=40) (actual time=70.909..787.192 rows=297249 loops=1)
Q15,1.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey__idx  (cost=0.00..47461.91 rows=2280708 width=0) (actual time=1358.359..1358.359 rows=2278717 loops=1)
Q15,1.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey__idx  (cost=0.00..47461.91 rows=2280708 width=0) (actual time=1130.338..1130.338 rows=2278717 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem  (cost=48032.09..1163624.71 rows=2280708 width=12) (actual time=1787.691..6080.998 rows=2245045 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem  (cost=48032.09..1163624.71 rows=2280708 width=12) (actual time=1500.400..4501.742 rows=2245045 loops=1)
Q14,1.0,->  Hash Join  (cost=101537.25..1162983.11 rows=760236 width=29) (actual time=2004.889..7840.125 rows=748669 loops=1)
Q14,1.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey__idx  (cost=0.00..15825.19 rows=760236 width=0) (actual time=305.897..305.897 rows=760143 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=16015.25..1060355.80 rows=760236 width=12) (actual time=447.368..3638.609 rows=748669 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..447376.99 rows=15073150 width=8) (actual time=0.048..7762.604 rows=14838070 loops=1)
Q13,1.0,->  Hash Right Join  (cost=69028.00..817867.99 rows=15073150 width=8) (actual time=760.145..24739.904 rows=15338089 loops=1)
Q12,1.0,->  Seq Scan on orders  (cost=0.00..409314.79 rows=15224879 width=20) (actual time=0.009..5765.403 rows=15000000 loops=1)
Q12,1.0,->  Index Scan using lineitem_l_orderkey_idx_part2 on lineitem  (cost=0.00..380052.28 rows=294689 width=15) (actual time=0.150..10382.602 rows=312305 loops=1)
Q12,1.0,->  Hash Join  (cost=599625.78..988887.08 rows=294689 width=27) (actual time=10981.469..22203.502 rows=312305 loops=1)
Q12,1.0,->  Hash  (cost=409314.79..409314.79 rows=15224879 width=20) (actual time=10970.410..10970.410 rows=15000000 loops=1)
Q11,1.0,->  Hash Join  (cost=3645.32..317803.33 rows=320000 width=8) (actual time=39.824..4483.769 rows=317840 loops=1)
Q11,1.0,->  Hash Join  (cost=3645.32..317803.33 rows=320000 width=12) (actual time=51.673..4899.218 rows=317840 loops=1)
Q11,1.0,->  Hash Join  (cost=1.32..3595.32 rows=4000 width=4) (actual time=0.055..38.614 rows=3973 loops=1)
Q11,1.0,->  Hash Join  (cost=1.32..3595.32 rows=4000 width=4) (actual time=0.040..50.313 rows=3973 loops=1)
Q11,1.0,->  Hash  (cost=3595.32..3595.32 rows=4000 width=4) (actual time=51.596..51.596 rows=3973 loops=1)
Q11,1.0,->  Hash  (cost=3595.32..3595.32 rows=4000 width=4) (actual time=39.738..39.738 rows=3973 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..1842447.45 rows=59564826 width=20) (actual time=0.030..20377.015 rows=58704449 loops=1)
Q10,1.0,->  Sort  (cost=333959.58..335410.91 rows=580531 width=8) (actual time=3447.346..3578.586 rows=567721 loops=1)
Q10,1.0,->  Index Scan using lineitem_l_orderkey_idx_l_returnflag on lineitem  (cost=0.00..695310.59 rows=15043524 width=12) (actual time=0.105..12252.483 rows=14807479 loops=1)
Q10,1.0,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_idx  (cost=0.00..12463.31 rows=580531 width=0) (actual time=207.736..207.736 rows=576248 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=12608.44..278382.40 rows=580531 width=8) (actual time=304.477..3233.967 rows=567721 loops=1)
Q19,,->  BitmapOr  (cost=13422.96..13422.96 rows=10285 width=0) (actual time=107.693..107.693 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=8679.55..8679.55 rows=1583 width=0) (actual time=62.742..62.742 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=4451.91..4451.91 rows=784 width=0) (actual time=41.843..41.843 rows=0 loops=1)
