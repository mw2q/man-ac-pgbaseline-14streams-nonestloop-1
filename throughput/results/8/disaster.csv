Q21,1480495.0,->  Hash Semi Join  (cost=2692778.13..4872404.57 rows=1 width=38) (actual time=26906.058..58483.080 rows=1480495 loops=1)
Q3,317594.9,->  Sort  (cost=2777087.80..2785027.68 rows=3175949 width=20) (actual time=59451.207..59451.210 rows=10 loops=1)
Q18,304426.1,->  GroupAggregate  (cost=10466901.95..11304073.94 rows=30442618 width=39) (actual time=69825.352..69825.653 rows=100 loops=1)
Q21,80849.0,->  Hash Anti Join  (cost=4788914.07..6968540.52 rows=1 width=34) (actual time=56035.075..92723.581 rows=80849 loops=1)
Q18,75370.6,->  Hash Join  (cost=2206867.27..2999650.06 rows=7612440 width=39) (actual time=41294.712..49056.615 rows=101 loops=1)
Q18,75370.6,->  Hash Join  (cost=2137839.27..2778373.26 rows=7612440 width=20) (actual time=40439.040..48200.030 rows=101 loops=1)
Q18,75370.6,->  Hash  (cost=2999650.06..2999650.06 rows=7612440 width=39) (actual time=49057.059..49057.059 rows=101 loops=1)
Q18,43427.4,->  Sort  (cost=10466901.95..10543008.49 rows=30442618 width=39) (actual time=69825.335..69825.377 rows=701 loops=1)
Q18,43058.8,->  Hash Join  (cost=3094805.56..5850531.57 rows=30442618 width=39) (actual time=49084.617..69821.923 rows=707 loops=1)
Q18,40503.1,->  Hash  (cost=2086704.01..2086704.01 rows=4090821 width=4) (actual time=40374.399..40374.399 rows=101 loops=1)
Q18,40503.1,->  HashAggregate  (cost=1994660.54..2045795.80 rows=4090821 width=8) (actual time=35833.681..40374.072 rows=101 loops=1)
Q21,39676.0,->  Hash Join  (cost=5328910.33..7508536.81 rows=1 width=26) (actual time=61909.222..98830.070 rows=39676 loops=1)
Q10,28431.4,->  Sort  (cost=1197993.40..1199414.97 rows=568628 width=176) (actual time=22171.113..22171.116 rows=20 loops=1)
Q9,27465.0,->  Sort  (cost=3825206.12..3825206.42 rows=119 width=46) (actual time=7914695.423..7915977.379 rows=3268340 loops=1)
Q9,27465.0,->  Merge Join  (cost=2693201.12..3358490.99 rows=119 width=28) (actual time=99341.158..109107.498 rows=3268340 loops=1)
Q9,27465.0,->  Hash Join  (cost=3362923.04..3825202.02 rows=119 width=46) (actual time=110459.003..7893734.842 rows=3268340 loops=1)
Q9,27465.0,->  Hash Join  (cost=3362921.47..3825198.22 rows=119 width=24) (actual time=110458.909..7888823.526 rows=3268340 loops=1)
Q9,27465.0,->  Hash Join  (cost=3358492.47..3820766.84 rows=119 width=28) (actual time=110367.416..7880430.334 rows=3268340 loops=1)
Q9,27465.0,->  Hash  (cost=3358490.99..3358490.99 rows=119 width=28) (actual time=110365.844..110365.844 rows=3268340 loops=1)
Q7,14771.2,GroupAggregate  (cost=3884039.22..3885959.48 rows=59085 width=64) (actual time=127663.710..127695.319 rows=4 loops=1)
Q2,4640.0,->  Merge Join  (cost=465841.71..26537698.74 rows=1 width=190) (actual time=7643.800..240305.309 rows=4640 loops=1)
Q21,4044.0,->  HashAggregate  (cost=7508536.81..7508536.82 rows=1 width=26) (actual time=98882.004..98883.518 rows=4044 loops=1)
Q15,3731.0,->  Subquery Scan on revenue8  (cost=1189124.22..1189208.17 rows=3731 width=12) (actual time=21599.224..21616.594 rows=1 loops=1)
Q15,3731.0,->  Sort  (cost=1189429.52..1189438.85 rows=3731 width=12) (actual time=21616.636..21616.638 rows=1 loops=1)
Q15,3731.0,Merge Join  (cost=2361802.37..2366899.80 rows=3731 width=79) (actual time=21659.719..21659.725 rows=1 loops=1)
Q15,3731.0,->  HashAggregate  (cost=1189124.22..1189170.86 rows=3731 width=12) (actual time=21599.222..21616.589 rows=1 loops=1)
Q8,363.0,Sort  (cost=2606076.33..2606078.15 rows=726 width=38) (actual time=92376.013..92376.014 rows=2 loops=1)
Q8,363.0,->  HashAggregate  (cost=2606029.13..2606041.83 rows=726 width=38) (actual time=92375.932..92375.934 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=7508536.83..7508536.84 rows=1 width=26) (actual time=98885.935..98885.943 rows=100 loops=1)
Q21,100.0,Limit  (cost=7508536.83..7508536.84 rows=1 width=26) (actual time=98885.942..98885.964 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=26537698.75..26537698.76 rows=1 width=190) (actual time=240339.201..240339.240 rows=100 loops=1)
Q2,100.0,Limit  (cost=26537698.75..26537698.76 rows=1 width=190) (actual time=240339.206..240339.256 rows=100 loops=1)
Q11,38.0,Sort  (cost=676867.00..677667.00 rows=320000 width=12) (actual time=6871.907..6872.954 rows=8406 loops=1)
Q11,38.0,->  HashAggregate  (cost=323403.33..327403.33 rows=320000 width=12) (actual time=6789.963..6867.244 rows=8406 loops=1)
Q3,27.8,->  HashAggregate  (cost=2676697.20..2708456.69 rows=3175949 width=20) (actual time=59364.082..59430.926 rows=114009 loops=1)
Q15,26.8,->  HashAggregate  (cost=1172288.89..1172326.20 rows=3731 width=12) (actual time=9621.910..9686.862 rows=100000 loops=1)
Q3,10.5,->  Hash Join  (cost=631470.95..2629057.96 rows=3175949 width=20) (actual time=21596.029..59075.700 rows=301782 loops=1)
Q4,10.0,->  Hash  (cost=1002518.19..1002518.19 rows=1363608 width=4) (actual time=56345.962..56345.962 rows=13753335 loops=1)
Q4,10.0,->  HashAggregate  (cost=988882.11..1002518.19 rows=1363608 width=4) (actual time=43897.799..52218.472 rows=13753335 loops=1)
Q19,7.1,->  Seq Scan on lineitem  (cost=0.00..3318197.19 rows=196743 width=16) (actual time=0.033..34906.264 rows=1413220 loops=1)
Q16,5.6,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.00..8.45 rows=10 width=4) (actual time=0.067..0.777 rows=56 loops=1)
Q5,5.0,Sort  (cost=2453958.91..2453958.97 rows=25 width=34) (actual time=78492.180..78492.182 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=2453958.08..2453958.33 rows=25 width=34) (actual time=78492.089..78492.094 rows=5 loops=1)
Q4,5.0,Sort  (cost=1304807.10..1304807.10 rows=1 width=16) (actual time=67309.742..67309.743 rows=5 loops=1)
Q4,5.0,->  HashAggregate  (cost=1304807.08..1304807.09 rows=1 width=16) (actual time=67309.572..67309.572 rows=5 loops=1)
Q13,4.3,Sort  (cost=930743.38..930743.88 rows=200 width=8) (actual time=54715.184..54715.186 rows=46 loops=1)
Q13,4.3,->  HashAggregate  (cost=930733.74..930735.74 rows=200 width=8) (actual time=54715.088..54715.099 rows=46 loops=1)
Q17,3.5,->  Hash Join  (cost=6589.87..10359632.44 rows=19845 width=4) (actual time=46.190..43993.473 rows=5524 loops=1)
Q4,3.3,->  Hash Join  (cost=1032391.21..1304013.59 rows=158697 width=16) (actual time=56730.667..67094.600 rows=525393 loops=1)
Q22,2.3,Sort  (cost=698796.19..698796.19 rows=3 width=20) (actual time=11138.630..11138.630 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=645926.29..645926.34 rows=3 width=20) (actual time=11138.567..11138.570 rows=7 loops=1)
Q2,2.0,->  Hash Join  (cost=17.03..3921.04 rows=1 width=4) (actual time=14.161..36.827 rows=2 loops=6264)
Q20,2.0,->  Merge Join  (cost=7614.88..1128221716.29 rows=29363 width=4) (actual time=27.223..328630.416 rows=58998 loops=1)
Q20,2.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.00..1128123573.20 rows=2666667 width=8) (actual time=0.702..326500.004 rows=5431759 loops=1)
Q16,2.0,->  Sort  (cost=446068.48..447539.96 rows=588592 width=40) (actual time=35768.115..35918.287 rows=1186317 loops=1)
Q16,2.0,->  Hash Join  (cost=57817.11..389661.03 rows=588592 width=40) (actual time=884.177..8209.657 rows=1186317 loops=1)
Q12,2.0,Sort  (cost=993971.38..993971.38 rows=1 width=27) (actual time=23607.294..23607.295 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=993971.36..993971.37 rows=1 width=27) (actual time=23607.180..23607.181 rows=2 loops=1)
Q10,2.0,->  Merge Join  (cost=333258.30..1074739.68 rows=568628 width=12) (actual time=3243.073..16149.872 rows=1147298 loops=1)
Q10,2.0,->  Hash Join  (cost=402287.86..1162960.44 rows=568628 width=176) (actual time=4613.983..19773.058 rows=1147298 loops=1)
Q10,2.0,->  Hash Join  (cost=402286.30..1155140.24 rows=568628 width=154) (actual time=4613.950..19376.303 rows=1147298 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=8.48..270966.48 rows=4000000 width=8) (actual time=0.833..3915.766 rows=7995520 loops=1)
Q4,1.8,->  Index Scan using lineitem_l_orderkey_idx_part1 on lineitem  (cost=0.00..938144.41 rows=20295079 width=4) (actual time=0.182..22031.965 rows=37927733 loops=1)
Q21,1.8,->  Seq Scan on lineitem l3  (cost=0.00..1842447.45 rows=20295079 width=8) (actual time=0.008..17491.314 rows=37927733 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..1842447.45 rows=20295079 width=8) (actual time=0.035..16719.988 rows=37927733 loops=1)
Q21,1.8,->  Hash Join  (cost=3645.32..1930317.35 rows=811803 width=34) (actual time=38.483..23552.705 rows=1535190 loops=1)
Q21,1.8,->  Hash  (cost=1842447.45..1842447.45 rows=20295079 width=8) (actual time=29121.965..29121.965 rows=37927733 loops=1)
Q20,1.5,Sort  (cost=1128226433.74..1128226436.68 rows=1175 width=51) (actual time=328961.474..328961.562 rows=1820 loops=1)
Q20,1.5,->  Hash Semi Join  (cost=1128222745.32..1128226373.83 rows=1175 width=51) (actual time=328919.104..328953.404 rows=1820 loops=1)
Q20,1.5,->  Hash  (cost=1128222376.96..1128222376.96 rows=29363 width=4) (actual time=328918.979..328918.979 rows=44630 loops=1)
Q20,1.5,->  HashAggregate  (cost=1128221789.70..1128222083.33 rows=29363 width=4) (actual time=328891.578..328909.957 rows=44630 loops=1)
Q1,1.5,Sort  (cost=4163872.28..4163872.29 rows=6 width=20) (actual time=101809.227..101809.227 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=4163872.09..4163872.20 rows=6 width=20) (actual time=101809.122..101809.124 rows=4 loops=1)
Q9,1.4,GroupAggregate  (cost=3825206.12..3825210.28 rows=119 width=46) (actual time=7914707.896..7918500.779 rows=175 loops=1)
Q10,1.4,->  HashAggregate  (cost=1177176.14..1182862.42 rows=568628 width=176) (actual time=21736.050..22031.020 rows=381623 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2870.99 rows=139703 width=0) (actual time=637.816..637.816 rows=190303 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=2905.91..41851.12 rows=139703 width=24) (actual time=645.490..1024.566 rows=190303 loops=1)
Q15,1.3,->  Index Scan using pk_supplier on supplier  (cost=0.00..4791.46 rows=100000 width=71) (actual time=0.081..35.340 rows=71902 loops=1)
Q9,1.1,->  Sort  (cost=2693199.60..2700599.25 rows=2959862 width=28) (actual time=99341.068..100660.898 rows=3268340 loops=1)
Q9,1.1,->  Seq Scan on part  (cost=0.00..65522.00 rows=98097 width=4) (actual time=0.025..1448.988 rows=108871 loops=1)
Q9,1.1,->  Hash Join  (cost=66748.21..2375057.37 rows=2959862 width=28) (actual time=1515.857..96085.530 rows=3268340 loops=1)
Q9,1.1,->  Hash  (cost=65522.00..65522.00 rows=98097 width=4) (actual time=1515.605..1515.605 rows=108871 loops=1)
Q19,1.1,->  Hash Join  (cost=37609.72..3357584.23 rows=1015 width=8) (actual time=417.094..37586.944 rows=1180 loops=1)
Q9,1.0,->  Seq Scan on orders  (cost=0.00..405686.04 rows=15089904 width=8) (actual time=0.012..19113.738 rows=15015000 loops=1)
Q9,1.0,->  Seq Scan on lineitem  (cost=0.00..1675254.27 rows=60345627 width=24) (actual time=0.024..19281.906 rows=60045826 loops=1)
Q9,1.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.00..603091.29 rows=8000000 width=12) (actual time=0.023..5506.404 rows=7999853 loops=1)
Q8,1.0,->  Seq Scan on lineitem  (cost=0.00..1673600.58 rows=60286058 width=20) (actual time=0.023..20370.683 rows=60046221 loops=1)
Q8,1.0,->  Hash Join  (cost=552087.71..2605537.11 rows=24601 width=38) (actual time=25214.456..92245.861 rows=24774 loops=1)
Q8,1.0,->  Hash Join  (cost=552086.15..2605074.28 rows=24601 width=16) (actual time=25214.353..92124.974 rows=24774 loops=1)
Q8,1.0,->  Hash Join  (cost=547657.15..2600153.26 rows=24601 width=16) (actual time=25122.274..91912.771 rows=24774 loops=1)
Q8,1.0,->  Hash Join  (cost=519117.10..2530486.44 rows=3633845 width=20) (actual time=24511.506..85300.971 rows=3653978 loops=1)
Q8,1.0,->  Hash Join  (cost=2.53..58905.53 rows=300000 width=4) (actual time=0.107..1516.256 rows=300270 loops=1)
Q8,1.0,->  Hash Join  (cost=158950.59..507758.76 rows=908667 width=8) (actual time=4850.920..23938.397 rows=913302 loops=1)
Q8,1.0,->  Hash  (cost=58905.53..58905.53 rows=300000 width=4) (actual time=1673.721..1673.721 rows=300270 loops=1)
Q8,1.0,->  Hash  (cost=507758.76..507758.76 rows=908667 width=8) (actual time=24510.375..24510.375 rows=913302 loops=1)
Q8,1.0,->  Hash  (cost=28370.80..28370.80 rows=13540 width=4) (actual time=606.347..606.347 rows=13526 loops=1)
Q8,1.0,->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..414.26 rows=13540 width=0) (actual time=8.126..8.126 rows=13526 loops=1)
Q8,1.0,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_idx  (cost=0.00..95159.23 rows=4543333 width=0) (actual time=3024.105..3024.105 rows=4579958 loops=1)
Q8,1.0,->  Bitmap Heap Scan on part  (cost=417.65..28370.80 rows=13540 width=4) (actual time=11.235..593.109 rows=13526 loops=1)
Q8,1.0,->  Bitmap Heap Scan on orders  (cost=96295.06..418979.06 rows=4543333 width=12) (actual time=3176.884..9911.560 rows=4561668 loops=1)
Q7,1.0,->  Sort  (cost=3884039.22..3884186.93 rows=59085 width=64) (actual time=127653.742..127662.526 rows=58068 loops=1)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..409314.79 rows=15224879 width=8) (actual time=0.014..5873.814 rows=15000000 loops=1)
Q7,1.0,->  Hash Join  (cost=89654.56..803466.93 rows=15224879 width=30) (actual time=1556.687..41930.382 rows=15000000 loops=1)
Q7,1.0,->  Hash Join  (cost=1388677.14..3879356.58 rows=59085 width=64) (actual time=59932.868..127382.589 rows=58068 loops=1)
Q7,1.0,->  Hash Join  (cost=1382871.58..3318894.15 rows=18478715 width=42) (actual time=59783.764..92982.323 rows=18228513 loops=1)
Q7,1.0,->  Hash  (cost=803466.93..803466.93 rows=15224879 width=30) (actual time=48244.927..48244.927 rows=15000000 loops=1)
Q7,1.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey__idx  (cost=0.00..384473.98 rows=18478715 width=0) (actual time=10798.540..10798.540 rows=18503145 loops=1)
Q7,1.0,->  Bitmap Heap Scan on lineitem  (cost=389093.66..1747656.38 rows=18478715 width=20) (actual time=11530.829..25346.141 rows=18228513 loops=1)
Q6,1.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey__idx  (cost=0.00..191108.19 rows=9184936 width=0) (actual time=5344.254..5344.254 rows=9235309 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=191300.96..1479344.02 rows=771084 width=8) (actual time=5909.632..16135.064 rows=759642 loops=1)
Q5,1.0,->  Seq Scan on lineitem  (cost=0.00..1671921.88 rows=60225588 width=16) (actual time=0.039..18780.571 rows=60045303 loops=1)
Q5,1.0,->  Hash Join  (cost=424087.66..2453220.17 rows=73791 width=34) (actual time=17001.073..78351.202 rows=72960 loops=1)
Q5,1.0,->  Hash Join  (cost=419408.66..2410906.74 rows=1844826 width=46) (actual time=16892.367..74640.881 rows=1812763 loops=1)
Q5,1.0,->  Hash Join  (cost=2.53..58905.53 rows=300000 width=38) (actual time=0.163..1441.642 rows=299436 loops=1)
Q5,1.0,->  Hash Join  (cost=111499.81..413642.22 rows=461315 width=38) (actual time=3753.894..16484.713 rows=453487 loops=1)
Q5,1.0,->  Hash  (cost=58905.53..58905.53 rows=300000 width=38) (actual time=1658.910..1658.910 rows=299436 loops=1)
Q5,1.0,->  Hash  (cost=413642.22..413642.22 rows=461315 width=38) (actual time=16891.796..16891.796 rows=453487 loops=1)
Q5,1.0,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_idx  (cost=0.00..48267.64 rows=2306574 width=0) (actual time=1857.936..1857.936 rows=2285104 loops=1)
Q5,1.0,->  Bitmap Heap Scan on orders  (cost=48844.28..337723.89 rows=2306574 width=8) (actual time=2094.586..8025.406 rows=2278172 loops=1)
Q4,1.0,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_idx  (cost=0.00..12680.27 rows=590627 width=0) (actual time=253.600..253.600 rows=581723 loops=1)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=12827.92..278753.33 rows=590627 width=20) (actual time=382.719..3968.692 rows=573172 loops=1)
Q3,1.0,->  Seq Scan on orders  (cost=0.00..447376.99 rows=7370232 width=16) (actual time=0.017..5936.784 rows=7264673 loops=1)
Q3,1.0,->  Seq Scan on lineitem  (cost=0.00..1842447.45 rows=32901353 width=12) (actual time=0.040..20856.855 rows=32432817 loops=1)
Q3,1.0,->  Hash Join  (cost=49686.17..613100.34 rows=1469649 width=12) (actual time=772.839..20993.542 rows=1456767 loops=1)
Q3,1.0,->  Hash  (cost=613100.34..613100.34 rows=1469649 width=12) (actual time=21594.112..21594.112 rows=1456767 loops=1)
Q3,1.0,->  Hash  (cost=45947.36..45947.36 rows=299105 width=4) (actual time=772.637..772.637 rows=300276 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..6855.77 rows=299105 width=0) (actual time=68.872..68.872 rows=300276 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=6930.54..45947.36 rows=299105 width=4) (actual time=77.869..683.100 rows=300276 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..409314.79 rows=15224879 width=4) (actual time=0.043..4772.245 rows=15000000 loops=1)
Q22,1.0,->  Hash  (cost=409314.79..409314.79 rows=15224879 width=4) (actual time=9849.273..9849.273 rows=15000000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=602531.69..645481.84 rows=59261 width=20) (actual time=10503.964..11113.539 rows=63323 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6543.28 rows=380984 width=0) (actual time=66.856..66.856 rows=381111 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer  (cost=6638.52..51917.35 rows=380984 width=4) (actual time=74.261..527.298 rows=381111 loops=1)
Q21,1.0,->  Seq Scan on orders  (cost=0.00..447376.99 rows=7409542 width=4) (actual time=0.015..3970.004 rows=7309513 loops=1)
Q21,1.0,->  Seq Scan on lineitem l2  (cost=0.00..1690234.36 rows=60885236 width=8) (actual time=0.006..13830.698 rows=59984748 loops=1)
Q21,1.0,->  Hash Join  (cost=1.32..3595.32 rows=4000 width=30) (actual time=0.037..37.303 rows=4044 loops=1)
Q21,1.0,->  Hash  (cost=447376.99..447376.99 rows=7409542 width=4) (actual time=5870.485..5870.485 rows=7309513 loops=1)
Q21,1.0,->  Hash  (cost=3595.32..3595.32 rows=4000 width=30) (actual time=38.375..38.375 rows=4044 loops=1)
Q21,1.0,->  Hash  (cost=1690234.36..1690234.36 rows=60885236 width=8) (actual time=26847.834..26847.834 rows=59984748 loops=1)
Q2,1.0,->  Sort  (cost=465841.66..469841.66 rows=1600000 width=168) (actual time=7611.067..7788.254 rows=1603623 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.00..102473.47 rows=8276 width=30) (actual time=0.113..1281.488 rows=7965 loops=1)
Q2,1.0,->  Hash Join  (cost=4006.53..300964.53 rows=1600000 width=168) (actual time=64.706..6306.974 rows=1604080 loops=1)
Q2,1.0,->  Hash Join  (cost=2.53..3756.53 rows=20000 width=4) (actual time=0.008..34.873 rows=20051 loops=6264)
Q2,1.0,->  Hash Join  (cost=2.53..3756.53 rows=20000 width=164) (actual time=0.040..54.362 rows=20051 loops=1)
Q2,1.0,->  Hash  (cost=3756.53..3756.53 rows=20000 width=164) (actual time=64.671..64.671 rows=20051 loops=1)
Q20,1.0,->  Index Scan using pk_part on part  (cost=0.00..97473.47 rows=22022 width=4) (actual time=0.044..1073.511 rows=21726 loops=1)
Q20,1.0,->  Hash Join  (cost=1.32..3595.32 rows=4000 width=55) (actual time=0.053..30.588 rows=4044 loops=1)
Q19,1.0,->  Hash  (cost=37480.76..37480.76 rows=10317 width=30) (actual time=383.982..383.982 rows=10306 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_idx  (cost=0.00..8385.47 rows=399700 width=0) (actual time=144.301..144.301 rows=399409 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_idx  (cost=0.00..4174.27 rows=198980 width=0) (actual time=63.412..63.412 rows=199678 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..290.65 rows=8117 width=0) (actual time=3.925..3.925 rows=8090 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..288.69 rows=7918 width=0) (actual time=5.645..5.645 rows=7979 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..288.61 rows=7912 width=0) (actual time=4.073..4.073 rows=8101 loops=1)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=13441.33..37480.76 rows=10317 width=30) (actual time=234.671..374.683 rows=10306 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..409314.79 rows=15224879 width=16) (actual time=0.010..3063.275 rows=15000000 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1690234.36 rows=60885236 width=8) (actual time=0.040..10411.111 rows=59984748 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1690234.36 rows=60885236 width=8) (actual time=0.007..11632.672 rows=59984748 loops=1)
Q17,1.0,->  Seq Scan on lineitem  (cost=0.00..1670268.19 rows=60166019 width=12) (actual time=0.029..19663.517 rows=60045379 loops=1)
Q17,1.0,->  Hash  (cost=6565.13..6565.13 rows=1979 width=4) (actual time=34.330..34.330 rows=2037 loops=1)
Q17,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..72.53 rows=1979 width=0) (actual time=1.028..1.028 rows=2037 loops=1)
Q17,1.0,->  Bitmap Heap Scan on part  (cost=73.02..6565.13 rows=1979 width=4) (actual time=1.366..33.352 rows=2037 loops=1)
Q16,1.0,Sort  (cost=455736.89..455805.87 rows=27591 width=40) (actual time=36756.671..36759.245 rows=27840 loops=1)
Q16,1.0,->  Hash  (cost=54129.94..54129.94 rows=294296 width=40) (actual time=883.111..883.111 rows=296741 loops=1)
Q16,1.0,->  GroupAggregate  (cost=446068.48..453701.79 rows=27591 width=40) (actual time=35768.196..36423.244 rows=27840 loops=1)
Q16,1.0,->  Bitmap Index Scan on part_p_size_idx  (cost=0.00..5611.19 rows=316927 width=0) (actual time=59.783..59.783 rows=319743 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=5684.76..54129.94 rows=294296 width=40) (actual time=68.468..760.473 rows=296741 loops=1)
Q15,1.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey__idx  (cost=0.00..47001.94 rows=2244711 width=0) (actual time=1705.264..1705.264 rows=2251993 loops=1)
Q15,1.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey__idx  (cost=0.00..47001.94 rows=2244711 width=0) (actual time=1613.564..1613.564 rows=2251993 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem  (cost=47563.12..1149841.78 rows=2244711 width=12) (actual time=2192.522..8627.632 rows=2247211 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem  (cost=47563.12..1149841.78 rows=2244711 width=12) (actual time=1993.850..6945.055 rows=2247211 loops=1)
Q14,1.0,->  Hash Join  (cost=102610.51..1185537.53 rows=811091 width=29) (actual time=2111.543..7357.076 rows=774067 loops=1)
Q14,1.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey__idx  (cost=0.00..16885.74 rows=811091 width=0) (actual time=331.721..331.721 rows=785568 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=17088.51..1081765.98 rows=811091 width=12) (actual time=486.282..3647.340 rows=774067 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..447376.99 rows=15073150 width=8) (actual time=0.037..9734.127 rows=14838070 loops=1)
Q13,1.0,->  Hash Right Join  (cost=69028.00..817867.99 rows=15073150 width=8) (actual time=1179.586..39575.857 rows=15338089 loops=1)
Q12,1.0,->  Seq Scan on orders  (cost=0.00..409314.79 rows=15224879 width=20) (actual time=0.028..5624.384 rows=15000000 loops=1)
Q12,1.0,->  Index Scan using lineitem_l_orderkey_idx_part2 on lineitem  (cost=0.00..380052.28 rows=293196 width=15) (actual time=0.436..10608.899 rows=311367 loops=1)
Q12,1.0,->  Hash Join  (cost=599625.78..988840.43 rows=293196 width=27) (actual time=11808.146..23290.846 rows=311367 loops=1)
Q12,1.0,->  Hash  (cost=409314.79..409314.79 rows=15224879 width=20) (actual time=11796.805..11796.805 rows=15000000 loops=1)
Q11,1.0,->  Hash Join  (cost=3645.32..317803.33 rows=320000 width=8) (actual time=36.542..3152.047 rows=327600 loops=1)
Q11,1.0,->  Hash Join  (cost=3645.32..317803.33 rows=320000 width=12) (actual time=48.983..3354.712 rows=327600 loops=1)
Q11,1.0,->  Hash Join  (cost=1.32..3595.32 rows=4000 width=4) (actual time=0.058..35.382 rows=4095 loops=1)
Q11,1.0,->  Hash Join  (cost=1.32..3595.32 rows=4000 width=4) (actual time=0.046..47.661 rows=4095 loops=1)
Q11,1.0,->  Hash  (cost=3595.32..3595.32 rows=4000 width=4) (actual time=48.930..48.930 rows=4095 loops=1)
Q11,1.0,->  Hash  (cost=3595.32..3595.32 rows=4000 width=4) (actual time=36.448..36.448 rows=4095 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..1818873.81 rows=58624957 width=20) (actual time=0.035..26351.187 rows=58572560 loops=1)
Q10,1.0,->  Sort  (cost=333256.59..334695.30 rows=575483 width=8) (actual time=3242.918..3352.885 rows=573853 loops=1)
Q10,1.0,->  Index Scan using lineitem_l_orderkey_idx_l_returnflag on lineitem  (cost=0.00..695310.59 rows=15043524 width=12) (actual time=0.100..10813.193 rows=14807478 loops=1)
Q10,1.0,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_idx  (cost=0.00..12356.83 rows=575483 width=0) (actual time=235.396..235.396 rows=582175 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=12500.70..278198.94 rows=575483 width=8) (actual time=327.156..3040.705 rows=573853 loops=1)
Q19,,->  BitmapOr  (cost=13441.33..13441.33 rows=10327 width=0) (actual time=231.955..231.955 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=8681.53..8681.53 rows=1622 width=0) (actual time=154.769..154.769 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=4468.29..4468.29 rows=787 width=0) (actual time=70.810..70.810 rows=0 loops=1)
