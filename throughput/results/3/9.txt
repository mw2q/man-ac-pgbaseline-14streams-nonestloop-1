BEGIN;
BEGIN
EXPLAIN (ANALYZE, BUFFERS)
select
	nation,
	o_year,
	sum(amount) as sum_profit
from
	(
		select
			n_name as nation,
			extract(year from o_orderdate) as o_year,
			l_extendedprice * (1 - l_discount) - ps_supplycost * l_quantity as amount
		from
			part,
			supplier,
			lineitem,
			partsupp,
			orders,
			nation
		where
			s_suppkey = l_suppkey
			and ps_suppkey = l_suppkey
			and ps_partkey = l_partkey
			and p_partkey = l_partkey
			and o_orderkey = l_orderkey
			and s_nationkey = n_nationkey
			and p_name like '%maroon%'
	) as profit
group by
	nation,
	o_year
order by
	nation,
	o_year desc;
                                                                                     QUERY PLAN                                                                                      
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 GroupAggregate  (cost=3852122.20..3852126.54 rows=124 width=46) (actual time=7586284.858..7589769.124 rows=175 loops=1)
   Buffers: shared hit=1517691 read=290351 dirtied=254 written=8763
   ->  Sort  (cost=3852122.20..3852122.51 rows=124 width=46) (actual time=7586272.679..7587320.210 rows=3257359 loops=1)
         Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         Sort Method: quicksort  Memory: 556371kB
         Buffers: shared hit=1517691 read=290351 dirtied=254 written=8763
         ->  Hash Join  (cost=3388457.93..3852117.88 rows=124 width=46) (actual time=110874.990..7565557.849 rows=3257359 loops=1)
               Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
               Buffers: shared hit=1517683 read=290351 dirtied=254 written=8763
               ->  Hash Join  (cost=3388456.37..3852114.00 rows=124 width=24) (actual time=110874.884..7560584.715 rows=3257359 loops=1)
                     Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                     Buffers: shared hit=1517679 read=290351 dirtied=254 written=8763
                     ->  Hash Join  (cost=3384027.37..3847682.52 rows=124 width=28) (actual time=110806.200..7550603.332 rows=3257359 loops=1)
                           Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           Buffers: shared hit=1515500 read=290351 dirtied=254 written=8763
                           ->  Seq Scan on orders  (cost=0.00..406897.75 rows=15134975 width=8) (actual time=0.010..17217.565 rows=15000000 loops=1)
                                 Buffers: shared hit=231913 read=23635 dirtied=254 written=160
                           ->  Hash  (cost=3384025.82..3384025.82 rows=124 width=28) (actual time=110805.348..110805.348 rows=3257359 loops=1)
                                 Buckets: 1024  Batches: 1  Memory Usage: 190861kB
                                 Buffers: shared hit=1283587 read=266716 written=8603
                                 ->  Merge Join  (cost=2717745.65..3384025.82 rows=124 width=28) (actual time=101769.139..109677.598 rows=3257359 loops=1)
                                       Merge Cond: ((partsupp.ps_partkey = lineitem.l_partkey) AND (partsupp.ps_suppkey = lineitem.l_suppkey))
                                       Buffers: shared hit=1283587 read=266716 written=8603
                                       ->  Index Scan using pk_partsupp on partsupp  (cost=0.00..603091.29 rows=8000000 width=12) (actual time=0.021..3976.431 rows=7999869 loops=1)
                                             Buffers: shared hit=304259 read=129946
                                       ->  Sort  (cost=2717744.13..2725473.87 rows=3091896 width=28) (actual time=101769.050..103023.138 rows=3257359 loops=1)
                                             Sort Key: part.p_partkey, lineitem.l_suppkey
                                             Sort Method: quicksort  Memory: 352786kB
                                             Buffers: shared hit=979328 read=136770 written=8603
                                             ->  Hash Join  (cost=66798.43..2384436.80 rows=3091896 width=28) (actual time=1559.108..98785.641 rows=3257359 loops=1)
                                                   Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                                   Buffers: shared hit=979325 read=136770 written=8603
                                                   ->  Seq Scan on lineitem  (cost=0.00..1681142.21 rows=60557721 width=24) (actual time=0.030..19089.908 rows=59983922 loops=1)
                                                         Buffers: shared hit=978523 read=97050 written=51
                                                   ->  Hash  (cost=65522.00..65522.00 rows=102114 width=4) (actual time=1558.903..1558.903 rows=108626 loops=1)
                                                         Buckets: 16384  Batches: 1  Memory Usage: 3819kB
                                                         Buffers: shared hit=802 read=39720 written=8552
                                                         ->  Seq Scan on part  (cost=0.00..65522.00 rows=102114 width=4) (actual time=0.021..1494.449 rows=108626 loops=1)
                                                               Filter: ((p_name)::text ~~ '%maroon%'::text)
                                                               Rows Removed by Filter: 1891374
                                                               Buffers: shared hit=802 read=39720 written=8552
                     ->  Hash  (cost=3179.00..3179.00 rows=100000 width=8) (actual time=68.376..68.376 rows=100000 loops=1)
                           Buckets: 16384  Batches: 1  Memory Usage: 3907kB
                           Buffers: shared hit=2179
                           ->  Seq Scan on supplier  (cost=0.00..3179.00 rows=100000 width=8) (actual time=0.010..44.338 rows=100000 loops=1)
                                 Buffers: shared hit=2179
               ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.015..0.015 rows=25 loops=1)
                     Buckets: 1024  Batches: 1  Memory Usage: 2kB
                     Buffers: shared hit=1
                     ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.005..0.009 rows=25 loops=1)
                           Buffers: shared hit=1
 Total runtime: 7589822.590 ms
(52 rows)

COMMIT;
COMMIT
