Q21,1481359.0,->  Hash Semi Join  (cost=2692778.13..4872404.57 rows=1 width=38) (actual time=31642.294..65501.931 rows=1481359 loops=1)
Q3,317969.8,->  Sort  (cost=2777518.19..2785467.43 rows=3179698 width=20) (actual time=50340.154..50340.158 rows=10 loops=1)
Q18,305378.7,->  GroupAggregate  (cost=10394906.07..11226299.65 rows=30232494 width=39) (actual time=103793.282..103793.587 rows=99 loops=1)
Q21,81791.0,->  Hash Anti Join  (cost=4788914.07..6968540.52 rows=1 width=34) (actual time=68414.832..107540.872 rows=81791 loops=1)
Q18,76363.5,->  Hash Join  (cost=2193099.57..2980702.50 rows=7559996 width=39) (actual time=64640.174..76116.145 rows=99 loops=1)
Q18,76363.5,->  Hash Join  (cost=2124071.57..2760474.58 rows=7559996 width=20) (actual time=63004.319..74478.094 rows=99 loops=1)
Q18,76363.5,->  Hash  (cost=2980702.50..2980702.50 rows=7559996 width=39) (actual time=76116.662..76116.662 rows=99 loops=1)
Q18,43625.5,->  Sort  (cost=10394906.07..10470487.30 rows=30232494 width=39) (actual time=103793.263..103793.301 rows=693 loops=1)
Q18,43625.5,->  Hash Join  (cost=3075202.45..5811907.66 rows=30232494 width=39) (actual time=76253.689..103789.995 rows=693 loops=1)
Q18,41321.4,->  Hash  (cost=2072936.31..2072936.31 rows=4090821 width=4) (actual time=62832.846..62832.846 rows=99 loops=1)
Q18,41321.4,->  HashAggregate  (cost=1980892.83..2032028.10 rows=4090821 width=8) (actual time=55668.177..62832.226 rows=99 loops=1)
Q21,40126.0,->  Hash Join  (cost=5328910.33..7508536.81 rows=1 width=26) (actual time=76592.690..115948.005 rows=40126 loops=1)
Q10,28057.3,->  Sort  (cost=1196109.36..1197512.23 rows=561146 width=176) (actual time=24418.810..24418.813 rows=20 loops=1)
Q9,26269.0,->  Sort  (cost=3852122.20..3852122.51 rows=124 width=46) (actual time=7586272.679..7587320.210 rows=3257359 loops=1)
Q9,26269.0,->  Merge Join  (cost=2717745.65..3384025.82 rows=124 width=28) (actual time=101769.139..109677.598 rows=3257359 loops=1)
Q9,26269.0,->  Hash Join  (cost=3388457.93..3852117.88 rows=124 width=46) (actual time=110874.990..7565557.849 rows=3257359 loops=1)
Q9,26269.0,->  Hash Join  (cost=3388456.37..3852114.00 rows=124 width=24) (actual time=110874.884..7560584.715 rows=3257359 loops=1)
Q9,26269.0,->  Hash Join  (cost=3384027.37..3847682.52 rows=124 width=28) (actual time=110806.200..7550603.332 rows=3257359 loops=1)
Q9,26269.0,->  Hash  (cost=3384025.82..3384025.82 rows=124 width=28) (actual time=110805.348..110805.348 rows=3257359 loops=1)
Q7,14625.7,GroupAggregate  (cost=3848708.64..3850609.99 rows=58503 width=64) (actual time=148140.703..148167.166 rows=4 loops=1)
Q2,4741.0,->  Merge Join  (cost=465841.71..25816222.44 rows=1 width=190) (actual time=11307.695..260414.823 rows=4741 loops=1)
Q21,4054.0,->  HashAggregate  (cost=7508536.81..7508536.82 rows=1 width=26) (actual time=115993.557..115994.724 rows=4054 loops=1)
Q15,3763.0,->  Subquery Scan on revenue3  (cost=1204095.28..1204179.95 rows=3763 width=12) (actual time=17505.828..17536.775 rows=1 loops=1)
Q15,3763.0,->  Sort  (cost=1204403.42..1204412.83 rows=3763 width=12) (actual time=17536.809..17536.810 rows=1 loops=1)
Q15,3763.0,Merge Join  (cost=2391399.79..2396497.70 rows=3763 width=79) (actual time=17570.763..17570.767 rows=1 loops=1)
Q15,3763.0,->  HashAggregate  (cost=1204095.28..1204142.32 rows=3763 width=12) (actual time=17505.825..17536.769 rows=1 loops=1)
Q8,363.0,Sort  (cost=2595871.25..2595873.06 rows=726 width=38) (actual time=87127.887..87127.888 rows=2 loops=1)
Q8,363.0,->  HashAggregate  (cost=2595824.04..2595836.75 rows=726 width=38) (actual time=87127.820..87127.822 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=7508536.83..7508536.84 rows=1 width=26) (actual time=115997.309..115997.316 rows=100 loops=1)
Q21,100.0,Limit  (cost=7508536.83..7508536.84 rows=1 width=26) (actual time=115997.314..115997.333 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=25816222.45..25816222.46 rows=1 width=190) (actual time=260446.260..260446.290 rows=100 loops=1)
Q2,100.0,Limit  (cost=25816222.45..25816222.46 rows=1 width=190) (actual time=260446.264..260446.303 rows=100 loops=1)
Q11,33.1,Sort  (cost=676867.00..677667.00 rows=320000 width=12) (actual time=10214.423..10215.560 rows=9650 loops=1)
Q11,33.1,->  HashAggregate  (cost=323403.33..327403.33 rows=320000 width=12) (actual time=10074.832..10208.564 rows=9650 loops=1)
Q3,27.9,->  HashAggregate  (cost=2677009.08..2708806.06 rows=3179698 width=20) (actual time=50282.033..50321.804 rows=113799 loops=1)
Q15,26.5,->  HashAggregate  (cost=1186911.69..1186949.32 rows=3763 width=12) (actual time=7784.565..7851.036 rows=100000 loops=1)
Q3,10.5,->  Hash Join  (cost=632589.38..2629313.61 rows=3179698 width=20) (actual time=23719.963..49996.344 rows=300096 loops=1)
Q4,10.0,->  Hash  (cost=990837.31..990837.31 rows=1363608 width=4) (actual time=71487.188..71487.188 rows=13767168 loops=1)
Q4,10.0,->  HashAggregate  (cost=977201.23..990837.31 rows=1363608 width=4) (actual time=59241.361..68235.748 rows=13767168 loops=1)
Q19,6.2,->  Seq Scan on lineitem  (cost=0.00..3364578.35 rows=199459 width=16) (actual time=0.240..25753.059 rows=1243362 loops=1)
Q16,5.6,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.00..8.45 rows=10 width=4) (actual time=0.110..0.792 rows=56 loops=1)
Q5,5.0,Sort  (cost=2447754.37..2447754.43 rows=25 width=34) (actual time=75248.238..75248.239 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=2447753.54..2447753.79 rows=25 width=34) (actual time=75248.181..75248.184 rows=5 loops=1)
Q4,5.0,Sort  (cost=1289135.08..1289135.09 rows=1 width=16) (actual time=84663.149..84663.150 rows=5 loops=1)
Q4,5.0,->  HashAggregate  (cost=1289135.06..1289135.07 rows=1 width=16) (actual time=84662.968..84662.969 rows=5 loops=1)
Q13,4.4,Sort  (cost=929980.68..929981.18 rows=200 width=8) (actual time=33278.214..33278.217 rows=45 loops=1)
Q13,4.4,->  HashAggregate  (cost=929971.04..929973.04 rows=200 width=8) (actual time=33278.111..33278.118 rows=45 loops=1)
Q17,3.7,->  Hash Join  (cost=6715.00..10552342.22 rows=20296 width=4) (actual time=113.350..43433.900 rows=5434 loops=1)
Q4,3.3,->  Hash Join  (cost=1020103.55..1288351.01 rows=156810 width=16) (actual time=71978.246..84313.352 rows=527029 loops=1)
Q22,2.3,Sort  (cost=695235.98..695235.99 rows=3 width=20) (actual time=14551.338..14551.339 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=642377.56..642377.60 rows=3 width=20) (actual time=14551.239..14551.242 rows=7 loops=1)
Q2,2.0,->  Hash Join  (cost=17.03..3921.04 rows=1 width=4) (actual time=14.927..38.291 rows=2 loops=6410)
Q20,2.0,->  Merge Join  (cost=7614.88..1128221716.29 rows=29363 width=4) (actual time=13.546..359707.780 rows=59540 loops=1)
Q20,2.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.00..1128123573.20 rows=2666667 width=8) (actual time=0.731..357453.625 rows=5431692 loops=1)
Q16,2.0,->  Sort  (cost=446904.01..448390.05 rows=594416 width=40) (actual time=34357.311..34578.946 rows=1188937 loops=1)
Q16,2.0,->  Hash Join  (cost=57994.04..389896.20 rows=594416 width=40) (actual time=765.945..6472.282 rows=1188937 loops=1)
Q12,2.0,Sort  (cost=993966.50..993966.51 rows=1 width=27) (actual time=22542.772..22542.773 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=993966.48..993966.49 rows=1 width=27) (actual time=22542.685..22542.687 rows=2 loops=1)
Q10,2.0,->  Merge Join  (cost=332200.41..1073569.12 rows=561146 width=12) (actual time=3136.626..17764.618 rows=1135072 loops=1)
Q10,2.0,->  Hash Join  (cost=401229.98..1161537.36 rows=561146 width=176) (actual time=4885.707..21714.095 rows=1135072 loops=1)
Q10,2.0,->  Hash Join  (cost=401228.41..1153820.04 rows=561146 width=154) (actual time=4885.670..21288.645 rows=1135072 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=8.48..270966.48 rows=4000000 width=8) (actual time=0.848..2958.073 rows=7995520 loops=1)
Q4,1.8,->  Index Scan using lineitem_l_orderkey_idx_part1 on lineitem  (cost=0.00..927062.88 rows=20055340 width=4) (actual time=0.306..28945.915 rows=37966418 loops=1)
Q21,1.8,->  Seq Scan on lineitem l3  (cost=0.00..1842447.45 rows=20295079 width=8) (actual time=0.013..21124.718 rows=37927733 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..1842447.45 rows=20295079 width=8) (actual time=0.021..18225.503 rows=37927733 loops=1)
Q21,1.8,->  Hash Join  (cost=3645.32..1930317.35 rows=811803 width=34) (actual time=44.671..25518.740 rows=1536275 loops=1)
Q21,1.8,->  Hash  (cost=1842447.45..1842447.45 rows=20295079 width=8) (actual time=36763.308..36763.308 rows=37927733 loops=1)
Q15,1.6,->  Index Scan using pk_supplier on supplier  (cost=0.00..4791.46 rows=100000 width=71) (actual time=0.102..27.457 rows=61971 loops=1)
Q20,1.5,Sort  (cost=1128226433.74..1128226436.68 rows=1175 width=51) (actual time=360236.023..360236.124 rows=1824 loops=1)
Q20,1.5,->  Hash Semi Join  (cost=1128222745.32..1128226373.83 rows=1175 width=51) (actual time=360175.694..360222.028 rows=1824 loops=1)
Q20,1.5,->  Hash  (cost=1128222376.96..1128222376.96 rows=29363 width=4) (actual time=360175.503..360175.503 rows=45145 loops=1)
Q20,1.5,->  HashAggregate  (cost=1128221789.70..1128222083.33 rows=29363 width=4) (actual time=360146.584..360165.239 rows=45145 loops=1)
Q1,1.5,Sort  (cost=4217333.48..4217333.50 rows=6 width=20) (actual time=99966.154..99966.155 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=4217333.30..4217333.40 rows=6 width=20) (actual time=99966.057..99966.058 rows=4 loops=1)
Q9,1.4,GroupAggregate  (cost=3852122.20..3852126.54 rows=124 width=46) (actual time=7586284.858..7589769.124 rows=175 loops=1)
Q10,1.4,->  HashAggregate  (cost=1175566.01..1181177.47 rows=561146 width=176) (actual time=23893.978..24263.356 rows=378548 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2869.80 rows=139588 width=0) (actual time=901.330..901.330 rows=190817 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=2904.69..41846.88 rows=139588 width=24) (actual time=910.578..1685.693 rows=190817 loops=1)
Q19,1.1,->  Hash Join  (cost=37701.08..3404081.62 rows=1035 width=8) (actual time=210.193..27444.173 rows=1158 loops=1)
Q9,1.0,->  Sort  (cost=2717744.13..2725473.87 rows=3091896 width=28) (actual time=101769.050..103023.138 rows=3257359 loops=1)
Q9,1.0,->  Seq Scan on part  (cost=0.00..65522.00 rows=102114 width=4) (actual time=0.021..1494.449 rows=108626 loops=1)
Q9,1.0,->  Seq Scan on orders  (cost=0.00..406897.75 rows=15134975 width=8) (actual time=0.010..17217.565 rows=15000000 loops=1)
Q9,1.0,->  Seq Scan on lineitem  (cost=0.00..1681142.21 rows=60557721 width=24) (actual time=0.030..19089.908 rows=59983922 loops=1)
Q9,1.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.00..603091.29 rows=8000000 width=12) (actual time=0.021..3976.431 rows=7999869 loops=1)
Q9,1.0,->  Hash Join  (cost=66798.43..2384436.80 rows=3091896 width=28) (actual time=1559.108..98785.641 rows=3257359 loops=1)
Q9,1.0,->  Hash  (cost=65522.00..65522.00 rows=102114 width=4) (actual time=1558.903..1558.903 rows=108626 loops=1)
Q8,1.0,->  Seq Scan on lineitem  (cost=0.00..1666934.25 rows=60045925 width=20) (actual time=0.025..18075.835 rows=59985329 loops=1)
Q8,1.0,->  Hash Join  (cost=550088.84..2595341.22 rows=24141 width=38) (actual time=20552.066..86998.911 rows=24220 loops=1)
Q8,1.0,->  Hash Join  (cost=550087.28..2594887.02 rows=24141 width=16) (actual time=20551.961..86868.314 rows=24220 loops=1)
Q8,1.0,->  Hash Join  (cost=545658.28..2589975.20 rows=24141 width=16) (actual time=20481.322..86666.939 rows=24220 loops=1)
Q8,1.0,->  Hash Join  (cost=517363.94..2520721.53 rows=3619371 width=20) (actual time=20253.339..80958.076 rows=3638839 loops=1)
Q8,1.0,->  Hash Join  (cost=2.53..58905.53 rows=300000 width=4) (actual time=0.097..1183.651 rows=299436 loops=1)
Q8,1.0,->  Hash Join  (cost=158629.43..506050.77 rows=905054 width=8) (actual time=4591.299..19573.261 rows=910325 loops=1)
Q8,1.0,->  Hash  (cost=58905.53..58905.53 rows=300000 width=4) (actual time=1322.135..1322.135 rows=299436 loops=1)
Q8,1.0,->  Hash  (cost=506050.77..506050.77 rows=905054 width=8) (actual time=20252.538..20252.538 rows=910325 loops=1)
Q8,1.0,->  Hash  (cost=28127.59..28127.59 rows=13340 width=4) (actual time=224.683..224.683 rows=13292 loops=1)
Q8,1.0,->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..408.76 rows=13340 width=0) (actual time=5.200..5.200 rows=13292 loops=1)
Q8,1.0,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_idx  (cost=0.00..94842.59 rows=4525269 width=0) (actual time=3097.945..3097.945 rows=4561961 loops=1)
Q8,1.0,->  Bitmap Heap Scan on part  (cost=412.10..28127.59 rows=13340 width=4) (actual time=7.749..216.706 rows=13292 loops=1)
Q8,1.0,->  Bitmap Heap Scan on orders  (cost=95973.90..417374.94 rows=4525269 width=12) (actual time=3268.964..6865.973 rows=4557440 loops=1)
Q7,1.0,->  Sort  (cost=3848708.64..3848854.90 rows=58503 width=64) (actual time=148131.157..148137.185 rows=57755 loops=1)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..405283.20 rows=15074920 width=8) (actual time=0.018..7293.913 rows=15015000 loops=1)
Q7,1.0,->  Hash Join  (cost=89654.56..796436.16 rows=15074920 width=30) (actual time=2509.441..44732.400 rows=15015000 loops=1)
Q7,1.0,->  Hash Join  (cost=1377907.91..3844076.31 rows=58503 width=64) (actual time=66240.585..147736.236 rows=57755 loops=1)
Q7,1.0,->  Hash Join  (cost=1372102.35..3289072.31 rows=18296864 width=42) (actual time=66135.679..105196.999 rows=18247443 loops=1)
Q7,1.0,->  Hash  (cost=796436.16..796436.16 rows=15074920 width=30) (actual time=51769.674..51769.674 rows=15015000 loops=1)
Q7,1.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey__idx  (cost=0.00..382655.47 rows=18296864 width=0) (actual time=13747.999..13747.999 rows=18320255 loops=1)
Q7,1.0,->  Bitmap Heap Scan on lineitem  (cost=387229.69..1732422.65 rows=18296864 width=20) (actual time=14355.173..30476.567 rows=18247443 loops=1)
Q6,1.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey__idx  (cost=0.00..191039.57 rows=9129674 width=0) (actual time=7444.744..7444.744 rows=9146201 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=191238.34..1466322.00 rows=795075 width=8) (actual time=8280.457..23148.125 rows=797028 loops=1)
Q5,1.0,->  Seq Scan on lineitem  (cost=0.00..1668608.25 rows=60106225 width=16) (actual time=0.056..17390.203 rows=59985552 loops=1)
Q5,1.0,->  Hash Join  (cost=422449.31..2447024.14 rows=72940 width=34) (actual time=12046.756..75102.217 rows=72043 loops=1)
Q5,1.0,->  Hash Join  (cost=417770.31..2405145.02 rows=1823536 width=46) (actual time=11964.643..71353.456 rows=1815450 loops=1)
Q5,1.0,->  Hash Join  (cost=2.53..58905.53 rows=300000 width=38) (actual time=0.125..797.704 rows=299436 loops=1)
Q5,1.0,->  Hash Join  (cost=110986.78..412070.47 rows=455987 width=38) (actual time=2756.803..11691.096 rows=453429 loops=1)
Q5,1.0,->  Hash  (cost=58905.53..58905.53 rows=300000 width=38) (actual time=940.315..940.315 rows=299436 loops=1)
Q5,1.0,->  Hash  (cost=412070.47..412070.47 rows=455987 width=38) (actual time=11964.211..11964.211 rows=453429 loops=1)
Q5,1.0,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_idx  (cost=0.00..47761.27 rows=2279937 width=0) (actual time=1663.292..1663.292 rows=2281190 loops=1)
Q5,1.0,->  Bitmap Heap Scan on orders  (cost=48331.25..336305.30 rows=2279937 width=8) (actual time=1816.099..4353.002 rows=2276827 loops=1)
Q4,1.0,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_idx  (cost=0.00..12076.96 rows=576706 width=0) (actual time=382.998..382.998 rows=575883 loops=1)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=12221.13..274899.72 rows=576706 width=20) (actual time=489.321..4410.390 rows=574750 loops=1)
Q3,1.0,->  Seq Scan on orders  (cost=0.00..447376.99 rows=7430810 width=16) (actual time=0.016..4822.119 rows=7327245 loops=1)
Q3,1.0,->  Seq Scan on lineitem  (cost=0.00..1842447.45 rows=32661278 width=12) (actual time=0.049..15627.910 rows=32182629 loops=1)
Q3,1.0,->  Hash Join  (cost=49689.28..614061.90 rows=1482199 width=12) (actual time=597.389..23075.146 rows=1465454 loops=1)
Q3,1.0,->  Hash  (cost=614061.90..614061.90 rows=1482199 width=12) (actual time=23717.958..23717.958 rows=1465454 loops=1)
Q3,1.0,->  Hash  (cost=45949.28..45949.28 rows=299200 width=4) (actual time=597.186..597.186 rows=300036 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..6856.48 rows=299200 width=0) (actual time=55.586..55.586 rows=300036 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=6931.28..45949.28 rows=299200 width=4) (actual time=63.587..524.389 rows=300036 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..406897.75 rows=15134975 width=4) (actual time=0.017..6847.559 rows=15015000 loops=1)
Q22,1.0,->  Hash  (cost=406897.75..406897.75 rows=15134975 width=4) (actual time=12511.565..12511.565 rows=15015000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=598989.63..641933.47 rows=59212 width=20) (actual time=13431.442..14520.823 rows=63693 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6540.91 rows=380670 width=0) (actual time=139.859..139.859 rows=382018 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer  (cost=6636.08..51906.67 rows=380670 width=4) (actual time=151.844..748.184 rows=382018 loops=1)
Q21,1.0,->  Seq Scan on orders  (cost=0.00..447376.99 rows=7409542 width=4) (actual time=0.016..5729.628 rows=7309513 loops=1)
Q21,1.0,->  Seq Scan on lineitem l2  (cost=0.00..1690234.36 rows=60885236 width=8) (actual time=0.010..16863.181 rows=59984748 loops=1)
Q21,1.0,->  Hash Join  (cost=1.32..3595.32 rows=4000 width=30) (actual time=0.050..43.201 rows=4054 loops=1)
Q21,1.0,->  Hash  (cost=447376.99..447376.99 rows=7409542 width=4) (actual time=8172.989..8172.989 rows=7309513 loops=1)
Q21,1.0,->  Hash  (cost=3595.32..3595.32 rows=4000 width=30) (actual time=44.568..44.568 rows=4054 loops=1)
Q21,1.0,->  Hash  (cost=1690234.36..1690234.36 rows=60885236 width=8) (actual time=31577.340..31577.340 rows=59984748 loops=1)
Q2,1.0,->  Sort  (cost=465841.66..469841.66 rows=1600000 width=168) (actual time=11253.327..11451.403 rows=1602077 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.00..102473.47 rows=8046 width=30) (actual time=0.020..2975.384 rows=7936 loops=1)
Q2,1.0,->  Hash Join  (cost=4006.53..300964.53 rows=1600000 width=168) (actual time=63.201..9810.279 rows=1602640 loops=1)
Q2,1.0,->  Hash Join  (cost=2.53..3756.53 rows=20000 width=4) (actual time=0.010..36.257 rows=20033 loops=6410)
Q2,1.0,->  Hash Join  (cost=2.53..3756.53 rows=20000 width=164) (actual time=0.052..51.236 rows=20033 loops=1)
Q2,1.0,->  Hash  (cost=3756.53..3756.53 rows=20000 width=164) (actual time=63.156..63.156 rows=20033 loops=1)
Q20,1.0,->  Index Scan using pk_part on part  (cost=0.00..97473.47 rows=22022 width=4) (actual time=0.016..1126.260 rows=21823 loops=1)
Q20,1.0,->  Hash Join  (cost=1.32..3595.32 rows=4000 width=55) (actual time=0.060..42.085 rows=3990 loops=1)
Q19,1.0,->  Hash  (cost=37571.36..37571.36 rows=10377 width=30) (actual time=202.731..202.731 rows=10317 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_idx  (cost=0.00..8385.47 rows=399700 width=0) (actual time=54.416..54.416 rows=399409 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_idx  (cost=0.00..4174.27 rows=198980 width=0) (actual time=34.189..34.189 rows=199678 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.97 rows=8050 width=0) (actual time=5.617..5.617 rows=8017 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.45 rows=7997 width=0) (actual time=2.662..2.662 rows=7927 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.05 rows=7955 width=0) (actual time=2.879..2.879 rows=7877 loops=1)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=13441.93..37571.36 rows=10377 width=30) (actual time=104.548..199.007 rows=10317 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..406494.91 rows=15119991 width=16) (actual time=0.024..5892.772 rows=15015000 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1678567.89 rows=60464989 width=8) (actual time=0.039..16052.963 rows=60044664 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1678567.89 rows=60464989 width=8) (actual time=0.024..19555.865 rows=60044664 loops=1)
Q18,1.0,Limit  (cost=10394906.07..10394908.82 rows=100 width=39) (actual time=103793.286..103793.600 rows=99 loops=1)
Q17,1.0,->  Seq Scan on lineitem  (cost=0.00..1671921.88 rows=60225588 width=12) (actual time=0.038..20713.324 rows=59985781 loops=1)
Q17,1.0,->  Hash  (cost=6689.72..6689.72 rows=2022 width=4) (actual time=111.841..111.841 rows=2028 loops=1)
Q17,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..72.96 rows=2022 width=0) (actual time=1.387..1.387 rows=2028 loops=1)
Q17,1.0,->  Bitmap Heap Scan on part  (cost=73.46..6689.72 rows=2022 width=4) (actual time=1.731..109.417 rows=2028 loops=1)
Q16,1.0,Sort  (cost=456670.06..456739.72 rows=27864 width=40) (actual time=35486.374..35489.713 rows=27840 loops=1)
Q16,1.0,->  Hash  (cost=54270.46..54270.46 rows=297208 width=40) (actual time=764.909..764.909 rows=297396 loops=1)
Q16,1.0,->  GroupAggregate  (cost=446904.01..454612.85 rows=27864 width=40) (actual time=34357.403..35140.202 rows=27840 loops=1)
Q16,1.0,->  Bitmap Index Scan on part_p_size_idx  (cost=0.00..5664.99 rows=320367 width=0) (actual time=76.502..76.502 rows=320483 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=5739.29..54270.46 rows=297208 width=40) (actual time=85.743..650.895 rows=297396 loops=1)
Q15,1.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey__idx  (cost=0.00..47678.28 rows=2291145 width=0) (actual time=951.621..951.621 rows=2274808 loops=1)
Q15,1.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey__idx  (cost=0.00..47678.28 rows=2291145 width=0) (actual time=1340.853..1340.853 rows=2274808 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem  (cost=48251.07..1164000.24 rows=2291145 width=12) (actual time=1688.452..5362.203 rows=2241090 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem  (cost=48251.07..1164000.24 rows=2291145 width=12) (actual time=1239.660..6998.798 rows=2241090 loops=1)
Q14,1.0,->  Hash Join  (cost=101910.93..1165803.67 rows=775620 width=29) (actual time=2504.677..8386.079 rows=747840 loops=1)
Q14,1.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey__idx  (cost=0.00..16195.03 rows=775620 width=0) (actual time=545.563..545.563 rows=754639 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=16388.93..1062830.22 rows=775620 width=12) (actual time=745.484..4502.469 rows=747840 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..447376.99 rows=15042642 width=8) (actual time=0.032..7488.468 rows=14838268 loops=1)
Q13,1.0,->  Hash Right Join  (cost=69028.00..817257.83 rows=15042642 width=8) (actual time=953.674..23890.479 rows=15338284 loops=1)
Q12,1.0,->  Seq Scan on orders  (cost=0.00..409314.79 rows=15224879 width=20) (actual time=0.016..4658.602 rows=15000000 loops=1)
Q12,1.0,->  Index Scan using lineitem_l_orderkey_idx_part2 on lineitem  (cost=0.00..380052.28 rows=293096 width=15) (actual time=0.089..12463.435 rows=311944 loops=1)
Q12,1.0,->  Hash Join  (cost=599625.78..988837.30 rows=293096 width=27) (actual time=8989.345..22232.884 rows=311944 loops=1)
Q12,1.0,->  Hash  (cost=409314.79..409314.79 rows=15224879 width=20) (actual time=8982.390..8982.390 rows=15000000 loops=1)
Q11,1.0,->  Hash Join  (cost=3645.32..317803.33 rows=320000 width=8) (actual time=56.460..4513.784 rows=318960 loops=1)
Q11,1.0,->  Hash Join  (cost=3645.32..317803.33 rows=320000 width=12) (actual time=85.446..5150.652 rows=318960 loops=1)
Q11,1.0,->  Hash Join  (cost=1.32..3595.32 rows=4000 width=4) (actual time=0.076..82.599 rows=3987 loops=1)
Q11,1.0,->  Hash Join  (cost=1.32..3595.32 rows=4000 width=4) (actual time=0.068..54.639 rows=3987 loops=1)
Q11,1.0,->  Hash  (cost=3595.32..3595.32 rows=4000 width=4) (actual time=85.335..85.335 rows=3987 loops=1)
Q11,1.0,->  Hash  (cost=3595.32..3595.32 rows=4000 width=4) (actual time=56.366..56.366 rows=3987 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..1827920.94 rows=59735309 width=20) (actual time=0.037..28397.352 rows=59393165 loops=1)
Q10,1.0,->  Sort  (cost=332198.71..333618.49 rows=567911 width=8) (actual time=3136.534..3271.348 rows=567419 loops=1)
Q10,1.0,->  Index Scan using lineitem_l_orderkey_idx_l_returnflag on lineitem  (cost=0.00..695310.59 rows=15043524 width=12) (actual time=0.074..12291.486 rows=14807479 loops=1)
Q10,1.0,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_idx  (cost=0.00..12193.11 rows=567911 width=0) (actual time=281.746..281.746 rows=575692 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=12335.08..277919.75 rows=567911 width=8) (actual time=381.201..2923.309 rows=567419 loops=1)
Q19,,->  BitmapOr  (cost=13441.93..13441.93 rows=10387 width=0) (actual time=102.962..102.962 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=8679.96..8679.96 rows=1590 width=0) (actual time=58.742..58.742 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=4469.68..4469.68 rows=801 width=0) (actual time=41.318..41.318 rows=0 loops=1)
