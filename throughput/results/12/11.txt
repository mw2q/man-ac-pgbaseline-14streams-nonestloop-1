BEGIN;
BEGIN
EXPLAIN (ANALYZE, BUFFERS)
select
	ps_partkey,
	sum(ps_supplycost * ps_availqty) as value
from
	partsupp,
	supplier,
	nation
where
	ps_suppkey = s_suppkey
	and s_nationkey = n_nationkey
	and n_name = 'JORDAN'
group by
	ps_partkey having
		sum(ps_supplycost * ps_availqty) > (
			select
				sum(ps_supplycost * ps_availqty) * 0.0000100000
			from
				partsupp,
				supplier,
				nation
			where
				ps_suppkey = s_suppkey
				and s_nationkey = n_nationkey
				and n_name = 'JORDAN'
		)
order by
	value desc;
                                                                   QUERY PLAN                                                                   
------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=676867.00..677667.00 rows=320000 width=12) (actual time=9763.926..9765.159 rows=10364 loops=1)
   Sort Key: (sum((public.partsupp.ps_supplycost * (public.partsupp.ps_availqty)::double precision)))
   Sort Method: quicksort  Memory: 870kB
   Buffers: shared hit=7514 read=338765
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=320203.33..320203.34 rows=1 width=8) (actual time=4719.999..4719.999 rows=1 loops=1)
           Buffers: shared hit=3843 read=169295
           ->  Hash Join  (cost=3645.32..317803.33 rows=320000 width=8) (actual time=55.659..4636.764 rows=314640 loops=1)
                 Hash Cond: (public.partsupp.ps_suppkey = public.supplier.s_suppkey)
                 Buffers: shared hit=3843 read=169295
                 ->  Seq Scan on partsupp  (cost=0.00..250958.00 rows=8000000 width=12) (actual time=0.020..2811.879 rows=8000000 loops=1)
                       Buffers: shared hit=3840 read=167118
                 ->  Hash  (cost=3595.32..3595.32 rows=4000 width=4) (actual time=55.564..55.564 rows=3933 loops=1)
                       Buckets: 1024  Batches: 1  Memory Usage: 139kB
                       Buffers: shared hit=3 read=2177
                       ->  Hash Join  (cost=1.32..3595.32 rows=4000 width=4) (actual time=0.050..54.183 rows=3933 loops=1)
                             Hash Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
                             Buffers: shared hit=3 read=2177
                             ->  Seq Scan on supplier  (cost=0.00..3179.00 rows=100000 width=8) (actual time=0.009..38.030 rows=100000 loops=1)
                                   Buffers: shared hit=2 read=2177
                             ->  Hash  (cost=1.31..1.31 rows=1 width=4) (actual time=0.017..0.017 rows=1 loops=1)
                                   Buckets: 1024  Batches: 1  Memory Usage: 1kB
                                   Buffers: shared hit=1
                                   ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.013..0.015 rows=1 loops=1)
                                         Filter: (n_name = 'JORDAN'::bpchar)
                                         Rows Removed by Filter: 24
                                         Buffers: shared hit=1
   ->  HashAggregate  (cost=323403.33..327403.33 rows=320000 width=12) (actual time=9653.401..9758.235 rows=10364 loops=1)
         Filter: (sum((public.partsupp.ps_supplycost * (public.partsupp.ps_availqty)::double precision)) > $0)
         Rows Removed by Filter: 285870
         Buffers: shared hit=7511 read=338765
         ->  Hash Join  (cost=3645.32..317803.33 rows=320000 width=12) (actual time=65.504..4657.852 rows=314640 loops=1)
               Hash Cond: (public.partsupp.ps_suppkey = public.supplier.s_suppkey)
               Buffers: shared hit=3668 read=169470
               ->  Seq Scan on partsupp  (cost=0.00..250958.00 rows=8000000 width=16) (actual time=0.042..2847.591 rows=8000000 loops=1)
                     Buffers: shared hit=3665 read=167293
               ->  Hash  (cost=3595.32..3595.32 rows=4000 width=4) (actual time=65.431..65.431 rows=3933 loops=1)
                     Buckets: 1024  Batches: 1  Memory Usage: 139kB
                     Buffers: shared hit=3 read=2177
                     ->  Hash Join  (cost=1.32..3595.32 rows=4000 width=4) (actual time=0.040..64.335 rows=3933 loops=1)
                           Hash Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
                           Buffers: shared hit=3 read=2177
                           ->  Seq Scan on supplier  (cost=0.00..3179.00 rows=100000 width=8) (actual time=0.007..50.513 rows=100000 loops=1)
                                 Buffers: shared hit=2 read=2177
                           ->  Hash  (cost=1.31..1.31 rows=1 width=4) (actual time=0.014..0.014 rows=1 loops=1)
                                 Buckets: 1024  Batches: 1  Memory Usage: 1kB
                                 Buffers: shared hit=1
                                 ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.009..0.011 rows=1 loops=1)
                                       Filter: (n_name = 'JORDAN'::bpchar)
                                       Rows Removed by Filter: 24
                                       Buffers: shared hit=1
 Total runtime: 9771.124 ms
(52 rows)

COMMIT;
COMMIT
