Q21,1460322.0,->  Hash Semi Join  (cost=2692778.13..4872404.57 rows=1 width=38) (actual time=30343.957..63294.060 rows=1460322 loops=1)
Q18,353983.9,->  GroupAggregate  (cost=10466901.95..11304073.94 rows=30442618 width=39) (actual time=84034.360..84034.625 rows=86 loops=1)
Q3,317763.1,->  Sort  (cost=2777278.43..2785222.51 rows=3177631 width=20) (actual time=51395.830..51395.831 rows=10 loops=1)
Q18,88516.7,->  Hash Join  (cost=2206867.27..2999650.06 rows=7612440 width=39) (actual time=53354.567..61990.467 rows=86 loops=1)
Q18,88516.7,->  Hash Join  (cost=2137839.27..2778373.26 rows=7612440 width=20) (actual time=52171.991..60804.294 rows=86 loops=1)
Q18,88516.7,->  Hash  (cost=2999650.06..2999650.06 rows=7612440 width=39) (actual time=61990.942..61990.942 rows=86 loops=1)
Q21,80206.0,->  Hash Anti Join  (cost=4788914.07..6968540.52 rows=1 width=34) (actual time=64967.531..102886.747 rows=80206 loops=1)
Q18,50569.1,->  Sort  (cost=10466901.95..10543008.49 rows=30442618 width=39) (actual time=84034.343..84034.375 rows=602 loops=1)
Q18,50569.1,->  Hash Join  (cost=3094805.56..5850531.57 rows=30442618 width=39) (actual time=62097.375..84031.304 rows=602 loops=1)
Q18,47567.6,->  Hash  (cost=2086704.01..2086704.01 rows=4090821 width=4) (actual time=52074.631..52074.631 rows=86 loops=1)
Q18,47567.6,->  HashAggregate  (cost=1994660.54..2045795.80 rows=4090821 width=8) (actual time=45159.308..52073.972 rows=86 loops=1)
Q21,39319.0,->  Hash Join  (cost=5328910.33..7508536.81 rows=1 width=26) (actual time=73257.334..111479.626 rows=39319 loops=1)
Q10,28503.1,->  Sort  (cost=1198353.68..1199778.84 rows=570062 width=176) (actual time=23124.708..23124.713 rows=20 loops=1)
Q9,24421.2,->  Sort  (cost=3945638.38..3945638.72 rows=133 width=46) (actual time=9066915.306..9067987.297 rows=3248030 loops=1)
Q9,24421.2,->  Merge Join  (cost=2811397.16..3479380.83 rows=133 width=28) (actual time=99378.321..108847.987 rows=3248030 loops=1)
Q9,24421.2,->  Hash Join  (cost=3483813.06..3945633.69 rows=133 width=46) (actual time=110169.377..9047596.767 rows=3248030 loops=1)
Q9,24421.2,->  Hash Join  (cost=3483811.49..3945629.63 rows=133 width=24) (actual time=110169.276..9042515.061 rows=3248030 loops=1)
Q9,24421.2,->  Hash Join  (cost=3479382.49..3941197.97 rows=133 width=28) (actual time=110075.560..9034236.044 rows=3248030 loops=1)
Q9,24421.2,->  Hash  (cost=3479380.83..3479380.83 rows=133 width=28) (actual time=110067.227..110067.227 rows=3248030 loops=1)
Q7,14771.2,GroupAggregate  (cost=3884039.22..3885959.48 rows=59085 width=64) (actual time=111870.823..111895.497 rows=4 loops=1)
Q2,4856.0,->  Merge Join  (cost=465841.71..25431957.89 rows=1 width=190) (actual time=22450.004..356562.267 rows=4856 loops=1)
Q21,3991.0,->  HashAggregate  (cost=7508536.81..7508536.82 rows=1 width=26) (actual time=111524.443..111525.695 rows=3991 loops=1)
Q15,3684.0,->  Subquery Scan on revenue14  (cost=1201493.84..1201576.73 rows=3684 width=12) (actual time=10943.273..10946.257 rows=1 loops=1)
Q15,3684.0,->  Sort  (cost=1201794.95..1201804.16 rows=3684 width=12) (actual time=10946.295..10946.296 rows=1 loops=1)
Q15,3684.0,Merge Join  (cost=2386552.57..2391649.29 rows=3684 width=79) (actual time=10981.369..10981.376 rows=1 loops=1)
Q15,3684.0,->  HashAggregate  (cost=1201493.84..1201539.89 rows=3684 width=12) (actual time=10943.271..10946.254 rows=1 loops=1)
Q8,363.0,Sort  (cost=2633270.90..2633272.71 rows=726 width=38) (actual time=75699.538..75699.539 rows=2 loops=1)
Q8,363.0,->  HashAggregate  (cost=2633223.69..2633236.40 rows=726 width=38) (actual time=75699.446..75699.446 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=7508536.83..7508536.84 rows=1 width=26) (actual time=111528.102..111528.108 rows=100 loops=1)
Q21,100.0,Limit  (cost=7508536.83..7508536.84 rows=1 width=26) (actual time=111528.133..111528.150 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=25431957.90..25431957.90 rows=1 width=190) (actual time=356601.557..356601.587 rows=100 loops=1)
Q2,100.0,Limit  (cost=25431957.90..25431957.90 rows=1 width=190) (actual time=356601.560..356601.604 rows=100 loops=1)
Q11,35.7,Sort  (cost=676867.00..677667.00 rows=320000 width=12) (actual time=7396.805..7397.800 rows=8951 loops=1)
Q11,35.7,->  HashAggregate  (cost=323403.33..327403.33 rows=320000 width=12) (actual time=7322.389..7391.709 rows=8951 loops=1)
Q3,27.9,->  HashAggregate  (cost=2676834.65..2708610.96 rows=3177631 width=20) (actual time=51327.247..51377.292 rows=113833 loops=1)
Q15,27.1,->  HashAggregate  (cost=1184674.72..1184711.56 rows=3684 width=12) (actual time=3890.039..3912.562 rows=100000 loops=1)
Q3,10.5,->  Hash Join  (cost=632129.03..2629170.19 rows=3177631 width=20) (actual time=16930.929..51046.876 rows=300162 loops=1)
Q4,10.0,->  Hash  (cost=1002518.19..1002518.19 rows=1363608 width=4) (actual time=47906.915..47906.915 rows=13753335 loops=1)
Q4,10.0,->  HashAggregate  (cost=988882.11..1002518.19 rows=1363608 width=4) (actual time=38299.167..45243.816 rows=13753335 loops=1)
Q19,6.6,->  Seq Scan on lineitem  (cost=0.00..3364578.35 rows=199443 width=16) (actual time=0.563..26610.714 rows=1328706 loops=1)
Q16,5.6,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.00..8.45 rows=10 width=4) (actual time=0.096..1.032 rows=56 loops=1)
Q5,5.0,Sort  (cost=2479891.93..2479891.99 rows=25 width=34) (actual time=59162.530..59162.531 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=2479891.10..2479891.35 rows=25 width=34) (actual time=59162.470..59162.470 rows=5 loops=1)
Q4,5.0,Sort  (cost=1303843.36..1303843.37 rows=1 width=16) (actual time=58591.655..58591.656 rows=5 loops=1)
Q4,5.0,->  HashAggregate  (cost=1303843.34..1303843.35 rows=1 width=16) (actual time=58591.533..58591.534 rows=5 loops=1)
Q13,4.3,Sort  (cost=929228.13..929228.63 rows=200 width=8) (actual time=50137.832..50137.835 rows=46 loops=1)
Q13,4.3,->  HashAggregate  (cost=929218.49..929220.49 rows=200 width=8) (actual time=50137.729..50137.741 rows=46 loops=1)
Q17,3.8,->  Hash Join  (cost=6644.86..10564872.09 rows=20275 width=4) (actual time=33.905..26334.360 rows=5298 loops=1)
Q4,3.4,->  Hash Join  (cost=1031952.24..1303076.98 rows=153272 width=16) (actual time=48325.767..58391.472 rows=526376 loops=1)
Q22,2.3,Sort  (cost=698892.71..698892.72 rows=3 width=20) (actual time=11656.512..11656.514 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=645965.58..645965.63 rows=3 width=20) (actual time=11656.438..11656.439 rows=7 loops=1)
Q2,2.0,->  Hash Join  (cost=17.03..3921.04 rows=1 width=4) (actual time=19.583..50.166 rows=2 loops=6596)
Q20,2.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.00..1128123573.20 rows=2666667 width=8) (actual time=0.684..331495.446 rows=5436543 loops=1)
Q12,2.0,Sort  (cost=994025.30..994025.30 rows=1 width=27) (actual time=23374.154..23374.154 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=994025.28..994025.29 rows=1 width=27) (actual time=23374.026..23374.027 rows=2 loops=1)
Q16,1.9,->  Sort  (cost=446947.35..448434.22 rows=594750 width=40) (actual time=34850.196..35001.418 rows=1187861 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=8.48..270966.48 rows=4000000 width=8) (actual time=1.130..3460.491 rows=7995520 loops=1)
Q16,1.9,->  Hash Join  (cost=57999.60..389905.10 rows=594750 width=40) (actual time=760.459..7510.806 rows=1187861 loops=1)
Q10,1.9,->  Merge Join  (cost=333460.23..1074963.21 rows=570062 width=12) (actual time=2035.419..16999.116 rows=1109437 loops=1)
Q10,1.9,->  Hash Join  (cost=402489.80..1163232.37 rows=570062 width=176) (actual time=3396.892..20766.727 rows=1109437 loops=1)
Q10,1.9,->  Hash Join  (cost=402488.23..1155392.45 rows=570062 width=154) (actual time=3396.850..20374.856 rows=1109437 loops=1)
Q4,1.8,->  Index Scan using lineitem_l_orderkey_idx_part1 on lineitem  (cost=0.00..938144.41 rows=20295079 width=4) (actual time=0.120..18967.992 rows=37927733 loops=1)
Q21,1.8,->  Seq Scan on lineitem l3  (cost=0.00..1842447.45 rows=20295079 width=8) (actual time=0.012..19771.079 rows=37927733 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..1842447.45 rows=20295079 width=8) (actual time=0.032..18146.545 rows=37927733 loops=1)
Q21,1.8,->  Hash Join  (cost=3645.32..1930317.35 rows=811803 width=34) (actual time=42.480..24929.067 rows=1514247 loops=1)
Q21,1.8,->  Hash  (cost=1842447.45..1842447.45 rows=20295079 width=8) (actual time=34614.882..34614.882 rows=37927733 loops=1)
Q20,1.8,->  Merge Join  (cost=7614.88..1128221747.99 rows=32032 width=4) (actual time=9.930..333556.966 rows=59092 loops=1)
Q1,1.5,Sort  (cost=4229842.15..4229842.17 rows=6 width=20) (actual time=82737.646..82737.647 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=4229841.97..4229842.08 rows=6 width=20) (actual time=82737.557..82737.559 rows=4 loops=1)
Q10,1.5,->  HashAggregate  (cost=1177483.92..1183184.54 rows=570062 width=176) (actual time=22692.034..22991.512 rows=371830 loops=1)
Q20,1.4,Sort  (cost=1128226568.89..1128226572.09 rows=1281 width=51) (actual time=333831.991..333832.078 rows=1818 loops=1)
Q20,1.4,->  Hash Semi Join  (cost=1128222870.43..1128226502.77 rows=1281 width=51) (actual time=333791.158..333824.258 rows=1818 loops=1)
Q9,1.3,GroupAggregate  (cost=3945638.38..3945643.04 rows=133 width=46) (actual time=9066927.750..9070316.794 rows=175 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2876.73 rows=140278 width=0) (actual time=806.660..806.660 rows=191039 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=2911.80..41872.09 rows=140278 width=24) (actual time=814.424..1274.950 rows=191039 loops=1)
Q20,1.3,->  Hash  (cost=1128222468.71..1128222468.71 rows=32032 width=4) (actual time=333791.053..333791.053 rows=44775 loops=1)
Q20,1.3,->  HashAggregate  (cost=1128221828.07..1128222148.39 rows=32032 width=4) (actual time=333766.254..333781.906 rows=44775 loops=1)
Q15,1.2,->  Index Scan using pk_supplier on supplier  (cost=0.00..4791.46 rows=100000 width=71) (actual time=0.086..27.377 rows=82932 loops=1)
Q20,1.1,->  Index Scan using pk_part on part  (cost=0.00..97473.47 rows=24024 width=4) (actual time=0.015..1044.396 rows=21743 loops=1)
Q19,1.1,->  Hash Join  (cost=37793.91..3404174.64 rows=1041 width=8) (actual time=265.723..28247.726 rows=1169 loops=1)
Q18,1.1,Limit  (cost=10466901.95..10466904.70 rows=100 width=39) (actual time=84034.364..84034.640 rows=86 loops=1)
Q9,1.0,->  Sort  (cost=2811395.63..2819693.18 rows=3319019 width=28) (actual time=99378.007..100812.127 rows=3248030 loops=1)
Q9,1.0,->  Seq Scan on part  (cost=0.00..65522.00 rows=110109 width=4) (actual time=0.040..1745.630 rows=108168 loops=1)
Q9,1.0,->  Seq Scan on orders  (cost=0.00..405283.20 rows=15074920 width=8) (actual time=0.021..27620.424 rows=15015000 loops=1)
Q9,1.0,->  Seq Scan on lineitem  (cost=0.00..1673600.58 rows=60286058 width=24) (actual time=0.033..19163.702 rows=60046221 loops=1)
Q9,1.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.00..603091.29 rows=8000000 width=12) (actual time=0.033..5102.168 rows=7999989 loops=1)
Q9,1.0,->  Hash Join  (cost=66898.36..2451907.28 rows=3319019 width=28) (actual time=1817.431..96203.284 rows=3248030 loops=1)
Q9,1.0,->  Hash  (cost=65522.00..65522.00 rows=110109 width=4) (actual time=1817.184..1817.184 rows=108168 loops=1)
Q8,1.0,->  Seq Scan on lineitem  (cost=0.00..1690234.36 rows=60885236 width=20) (actual time=0.019..14081.164 rows=59984748 loops=1)
Q8,1.0,->  Hash Join  (cost=558881.83..2632730.71 rows=24649 width=38) (actual time=19401.484..75652.802 rows=24225 loops=1)
Q8,1.0,->  Hash Join  (cost=558880.27..2632266.98 rows=24649 width=16) (actual time=19401.368..75608.253 rows=24225 loops=1)
Q8,1.0,->  Hash Join  (cost=554451.27..2627345.00 rows=24649 width=16) (actual time=19311.704..75425.147 rows=24225 loops=1)
Q8,1.0,->  Hash Join  (cost=526039.22..2557399.39 rows=3669962 width=20) (actual time=19095.640..70535.751 rows=3640972 loops=1)
Q8,1.0,->  Hash Join  (cost=2.53..58905.53 rows=300000 width=4) (actual time=0.069..984.026 rows=299838 loops=1)
Q8,1.0,->  Hash Join  (cost=162289.94..514567.90 rows=917706 width=8) (actual time=3156.727..18688.418 rows=910542 loops=1)
Q8,1.0,->  Hash  (cost=58905.53..58905.53 rows=300000 width=4) (actual time=1066.388..1066.388 rows=299838 loops=1)
Q8,1.0,->  Hash  (cost=514567.90..514567.90 rows=917706 width=8) (actual time=19095.009..19095.009 rows=910542 loops=1)
Q8,1.0,->  Hash  (cost=28244.14..28244.14 rows=13433 width=4) (actual time=215.154..215.154 rows=13425 loops=1)
Q8,1.0,->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..413.46 rows=13433 width=0) (actual time=5.055..5.055 rows=13425 loops=1)
Q8,1.0,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_idx  (cost=0.00..98487.28 rows=4588528 width=0) (actual time=1976.258..1976.258 rows=4625776 loops=1)
Q8,1.0,->  Bitmap Heap Scan on part  (cost=416.82..28244.14 rows=13433 width=4) (actual time=7.530..209.013 rows=13425 loops=1)
Q8,1.0,->  Bitmap Heap Scan on orders  (cost=99634.41..425528.33 rows=4588528 width=12) (actual time=2089.733..5974.378 rows=4557232 loops=1)
Q7,1.0,->  Sort  (cost=3884039.22..3884186.93 rows=59085 width=64) (actual time=111862.128..111866.864 rows=59572 loops=1)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..409314.79 rows=15224879 width=8) (actual time=0.012..4117.238 rows=15000000 loops=1)
Q7,1.0,->  Hash Join  (cost=89654.56..803466.93 rows=15224879 width=30) (actual time=1377.326..39104.615 rows=15000000 loops=1)
Q7,1.0,->  Hash Join  (cost=1388677.14..3879356.58 rows=59085 width=64) (actual time=51286.730..111617.145 rows=59572 loops=1)
Q7,1.0,->  Hash Join  (cost=1382871.58..3318894.15 rows=18478715 width=42) (actual time=51178.377..83065.881 rows=18228513 loops=1)
Q7,1.0,->  Hash  (cost=803466.93..803466.93 rows=15224879 width=30) (actual time=45115.073..45115.073 rows=15000000 loops=1)
Q7,1.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey__idx  (cost=0.00..384473.98 rows=18478715 width=0) (actual time=5667.002..5667.002 rows=18503145 loops=1)
Q7,1.0,->  Bitmap Heap Scan on lineitem  (cost=389093.66..1747656.38 rows=18478715 width=20) (actual time=6054.394..18306.513 rows=18228513 loops=1)
Q6,1.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey__idx  (cost=0.00..192956.56 rows=9273773 width=0) (actual time=2812.250..2812.250 rows=9260391 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=193151.19..1483193.09 rows=778542 width=8) (actual time=3172.757..11593.470 rows=762968 loops=1)
Q5,1.0,->  Seq Scan on lineitem  (cost=0.00..1690234.36 rows=60885236 width=16) (actual time=0.024..12371.167 rows=59984748 loops=1)
Q5,1.0,->  Hash Join  (cost=428306.05..2479151.84 rows=73926 width=34) (actual time=8043.378..59076.613 rows=73070 loops=1)
Q5,1.0,->  Hash Join  (cost=423627.05..2436769.58 rows=1848200 width=46) (actual time=7977.440..55908.078 rows=1828760 loops=1)
Q5,1.0,->  Hash Join  (cost=2.53..58905.53 rows=300000 width=38) (actual time=0.105..683.330 rows=300963 loops=1)
Q5,1.0,->  Hash Join  (cost=112835.14..417850.07 rows=462158 width=38) (actual time=1393.066..7782.080 rows=457443 loops=1)
Q5,1.0,->  Hash  (cost=58905.53..58905.53 rows=300000 width=38) (actual time=776.726..776.726 rows=300963 loops=1)
Q5,1.0,->  Hash  (cost=417850.07..417850.07 rows=462158 width=38) (actual time=7976.985..7976.985 rows=457443 loops=1)
Q5,1.0,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_idx  (cost=0.00..49601.92 rows=2310792 width=0) (actual time=545.533..545.533 rows=2316079 loops=1)
Q5,1.0,->  Bitmap Heap Scan on orders  (cost=50179.61..341907.49 rows=2310792 width=8) (actual time=615.748..2701.041 rows=2281973 loops=1)
Q4,1.0,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_idx  (cost=0.00..12246.35 rows=570435 width=0) (actual time=346.427..346.427 rows=582739 loops=1)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=12388.95..278011.48 rows=570435 width=20) (actual time=417.451..3095.864 rows=574138 loops=1)
Q3,1.0,->  Seq Scan on orders  (cost=0.00..447376.99 rows=7405569 width=16) (actual time=0.007..4998.097 rows=7302312 loops=1)
Q3,1.0,->  Seq Scan on lineitem  (cost=0.00..1842447.45 rows=32751306 width=12) (actual time=0.040..17782.648 rows=32282677 loops=1)
Q3,1.0,->  Hash Join  (cost=49689.28..613664.48 rows=1477164 width=12) (actual time=523.917..16407.648 rows=1460468 loops=1)
Q3,1.0,->  Hash  (cost=613664.48..613664.48 rows=1477164 width=12) (actual time=16928.234..16928.234 rows=1460468 loops=1)
Q3,1.0,->  Hash  (cost=45949.28..45949.28 rows=299200 width=4) (actual time=523.728..523.728 rows=300036 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..6856.48 rows=299200 width=0) (actual time=50.776..50.776 rows=300036 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=6931.28..45949.28 rows=299200 width=4) (actual time=58.497..452.386 rows=300036 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..409314.79 rows=15224879 width=4) (actual time=0.038..4839.216 rows=15000000 loops=1)
Q22,1.0,->  Hash  (cost=409314.79..409314.79 rows=15224879 width=4) (actual time=10056.066..10056.066 rows=15000000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=602537.57..645519.30 rows=59505 width=20) (actual time=10880.787..11631.650 rows=63510 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6555.04 rows=382552 width=0) (actual time=71.556..71.556 rows=382359 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer  (cost=6650.67..51970.66 rows=382552 width=4) (actual time=78.905..694.771 rows=382359 loops=1)
Q21,1.0,->  Seq Scan on orders  (cost=0.00..447376.99 rows=7409542 width=4) (actual time=0.010..5534.227 rows=7309513 loops=1)
Q21,1.0,->  Seq Scan on lineitem l2  (cost=0.00..1690234.36 rows=60885236 width=8) (actual time=0.013..16723.320 rows=59984748 loops=1)
Q21,1.0,->  Hash Join  (cost=1.32..3595.32 rows=4000 width=30) (actual time=0.055..41.117 rows=3991 loops=1)
Q21,1.0,->  Hash  (cost=447376.99..447376.99 rows=7409542 width=4) (actual time=8284.976..8284.976 rows=7309513 loops=1)
Q21,1.0,->  Hash  (cost=3595.32..3595.32 rows=4000 width=30) (actual time=42.350..42.350 rows=3991 loops=1)
Q21,1.0,->  Hash  (cost=1690234.36..1690234.36 rows=60885236 width=8) (actual time=30289.222..30289.222 rows=59984748 loops=1)
Q2,1.0,->  Sort  (cost=465841.66..469841.66 rows=1600000 width=168) (actual time=22365.137..22599.354 rows=1602892 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.00..102473.47 rows=7924 width=30) (actual time=0.410..2388.395 rows=8081 loops=1)
Q2,1.0,->  Hash Join  (cost=4006.53..300964.53 rows=1600000 width=168) (actual time=93.439..19742.831 rows=1602960 loops=1)
Q2,1.0,->  Hash Join  (cost=2.53..3756.53 rows=20000 width=4) (actual time=0.014..47.363 rows=20037 loops=6596)
Q2,1.0,->  Hash Join  (cost=2.53..3756.53 rows=20000 width=164) (actual time=0.053..75.804 rows=20037 loops=1)
Q2,1.0,->  Hash  (cost=3756.53..3756.53 rows=20000 width=164) (actual time=93.394..93.394 rows=20037 loops=1)
Q20,1.0,->  Hash Join  (cost=1.32..3595.32 rows=4000 width=55) (actual time=0.057..30.992 rows=3995 loops=1)
Q19,1.0,->  Hash  (cost=37663.45..37663.45 rows=10437 width=30) (actual time=263.227..263.227 rows=10419 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_idx  (cost=0.00..8385.47 rows=399700 width=0) (actual time=67.815..67.815 rows=399409 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_idx  (cost=0.00..4174.27 rows=198980 width=0) (actual time=44.188..44.188 rows=199678 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..290.05 rows=8055 width=0) (actual time=4.029..4.029 rows=8038 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.41 rows=7991 width=0) (actual time=4.227..4.227 rows=8005 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.41 rows=7990 width=0) (actual time=3.804..3.804 rows=8172 loops=1)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=13442.40..37663.45 rows=10437 width=30) (actual time=129.876..258.306 rows=10419 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..409314.79 rows=15224879 width=16) (actual time=0.008..3919.412 rows=15000000 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1690234.36 rows=60885236 width=8) (actual time=0.039..12096.205 rows=59984748 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1690234.36 rows=60885236 width=8) (actual time=0.010..15085.658 rows=59984748 loops=1)
Q17,1.0,->  Seq Scan on lineitem  (cost=0.00..1690234.36 rows=60885236 width=12) (actual time=0.033..12654.845 rows=59984748 loops=1)
Q17,1.0,->  Hash  (cost=6619.89..6619.89 rows=1998 width=4) (actual time=28.508..28.508 rows=1967 loops=1)
Q17,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..72.72 rows=1998 width=0) (actual time=1.691..1.691 rows=1967 loops=1)
Q17,1.0,->  Bitmap Heap Scan on part  (cost=73.22..6619.89 rows=1998 width=4) (actual time=2.287..27.393 rows=1967 loops=1)
Q16,1.0,Sort  (cost=456718.94..456788.64 rows=27879 width=40) (actual time=35837.793..35839.469 rows=27839 loops=1)
Q16,1.0,->  Hash  (cost=54273.94..54273.94 rows=297375 width=40) (actual time=759.034..759.034 rows=297125 loops=1)
Q16,1.0,->  GroupAggregate  (cost=446947.35..454660.51 rows=27879 width=40) (actual time=34850.293..35499.899 rows=27839 loops=1)
Q16,1.0,->  Bitmap Index Scan on part_p_size_idx  (cost=0.00..5665.77 rows=320473 width=0) (actual time=53.877..53.877 rows=320276 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=5740.11..54273.94 rows=297375 width=40) (actual time=62.051..658.373 rows=297125 loops=1)
Q15,1.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey__idx  (cost=0.00..46668.33 rows=2242550 width=0) (actual time=625.249..625.249 rows=2279354 loops=1)
Q15,1.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey__idx  (cost=0.00..46668.33 rows=2242550 width=0) (actual time=1051.423..1051.423 rows=2279354 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem  (cost=47228.97..1162249.22 rows=2242550 width=12) (actual time=846.622..2642.524 rows=2245174 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem  (cost=47228.97..1162249.22 rows=2242550 width=12) (actual time=1333.393..5432.225 rows=2245174 loops=1)
Q14,1.0,->  Hash Join  (cost=101958.31..1172191.22 rows=780242 width=29) (actual time=1825.769..5424.375 rows=772714 loops=1)
Q14,1.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey__idx  (cost=0.00..16241.25 rows=780242 width=0) (actual time=276.673..276.673 rows=784089 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=16436.31..1069113.77 rows=780242 width=12) (actual time=411.611..2949.767 rows=772714 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..447376.99 rows=15012540 width=8) (actual time=0.042..9964.026 rows=14839285 loops=1)
Q13,1.0,->  Hash Right Join  (cost=69028.00..816655.79 rows=15012540 width=8) (actual time=1030.569..36708.568 rows=15339305 loops=1)
Q12,1.0,->  Seq Scan on orders  (cost=0.00..409314.79 rows=15224879 width=20) (actual time=0.011..4473.710 rows=15000000 loops=1)
Q12,1.0,->  Index Scan using lineitem_l_orderkey_idx_part2 on lineitem  (cost=0.00..380052.28 rows=294302 width=15) (actual time=0.332..13751.206 rows=312987 loops=1)
Q12,1.0,->  Hash Join  (cost=599625.78..988874.99 rows=294302 width=27) (actual time=8666.194..23078.972 rows=312987 loops=1)
Q12,1.0,->  Hash  (cost=409314.79..409314.79 rows=15224879 width=20) (actual time=8653.810..8653.810 rows=15000000 loops=1)
Q11,1.0,->  Hash Join  (cost=3645.32..317803.33 rows=320000 width=8) (actual time=38.296..3162.400 rows=323520 loops=1)
Q11,1.0,->  Hash Join  (cost=3645.32..317803.33 rows=320000 width=12) (actual time=48.112..3897.351 rows=323520 loops=1)
Q11,1.0,->  Hash Join  (cost=1.32..3595.32 rows=4000 width=4) (actual time=0.046..37.153 rows=4044 loops=1)
Q11,1.0,->  Hash Join  (cost=1.32..3595.32 rows=4000 width=4) (actual time=0.044..46.771 rows=4044 loops=1)
Q11,1.0,->  Hash  (cost=3595.32..3595.32 rows=4000 width=4) (actual time=48.052..48.052 rows=4044 loops=1)
Q11,1.0,->  Hash  (cost=3595.32..3595.32 rows=4000 width=4) (actual time=38.203..38.203 rows=4044 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..1842447.45 rows=59684863 width=20) (actual time=0.028..22015.403 rows=58816913 loops=1)
Q10,1.0,->  Sort  (cost=333458.53..334900.86 rows=576934 width=8) (actual time=2035.247..2169.120 rows=554174 loops=1)
Q10,1.0,->  Index Scan using lineitem_l_orderkey_idx_l_returnflag on lineitem  (cost=0.00..695310.59 rows=15043524 width=12) (actual time=0.126..12928.056 rows=14807459 loops=1)
Q10,1.0,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_idx  (cost=0.00..12387.34 rows=576934 width=0) (actual time=150.610..150.610 rows=562571 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=12531.57..278251.58 rows=576934 width=8) (actual time=215.436..1870.783 rows=554174 loops=1)
Q19,,->  BitmapOr  (cost=13442.40..13442.40 rows=10447 width=0) (actual time=127.971..127.971 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=8680.35..8680.35 rows=1597 width=0) (actual time=73.460..73.460 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=4469.15..4469.15 rows=795 width=0) (actual time=50.198..50.198 rows=0 loops=1)
